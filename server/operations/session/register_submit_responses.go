// Code generated by go-swagger; DO NOT EDIT.

package session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// RegisterSubmitOKCode is the HTTP code returned for type RegisterSubmitOK
const RegisterSubmitOKCode int = 200

/*RegisterSubmitOK OK

swagger:response registerSubmitOK
*/
type RegisterSubmitOK struct {
}

// NewRegisterSubmitOK creates RegisterSubmitOK with default headers values
func NewRegisterSubmitOK() *RegisterSubmitOK {

	return &RegisterSubmitOK{}
}

// WriteResponse to the client
func (o *RegisterSubmitOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// RegisterSubmitConflictCode is the HTTP code returned for type RegisterSubmitConflict
const RegisterSubmitConflictCode int = 409

/*RegisterSubmitConflict conflict

swagger:response registerSubmitConflict
*/
type RegisterSubmitConflict struct {
}

// NewRegisterSubmitConflict creates RegisterSubmitConflict with default headers values
func NewRegisterSubmitConflict() *RegisterSubmitConflict {

	return &RegisterSubmitConflict{}
}

// WriteResponse to the client
func (o *RegisterSubmitConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}

// RegisterSubmitInternalServerErrorCode is the HTTP code returned for type RegisterSubmitInternalServerError
const RegisterSubmitInternalServerErrorCode int = 500

/*RegisterSubmitInternalServerError internal server error

swagger:response registerSubmitInternalServerError
*/
type RegisterSubmitInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewRegisterSubmitInternalServerError creates RegisterSubmitInternalServerError with default headers values
func NewRegisterSubmitInternalServerError() *RegisterSubmitInternalServerError {

	return &RegisterSubmitInternalServerError{}
}

// WithPayload adds the payload to the register submit internal server error response
func (o *RegisterSubmitInternalServerError) WithPayload(payload string) *RegisterSubmitInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register submit internal server error response
func (o *RegisterSubmitInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterSubmitInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
