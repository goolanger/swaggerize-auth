// Code generated by go-swagger; DO NOT EDIT.

package session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// StateSubmitReader is a Reader for the StateSubmit structure.
type StateSubmitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StateSubmitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStateSubmitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewStateSubmitInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStateSubmitOK creates a StateSubmitOK with default headers values
func NewStateSubmitOK() *StateSubmitOK {
	return &StateSubmitOK{}
}

/*StateSubmitOK handles this case with default header values.

OK
*/
type StateSubmitOK struct {
}

func (o *StateSubmitOK) Error() string {
	return fmt.Sprintf("[POST /auth/session/state][%d] stateSubmitOK ", 200)
}

func (o *StateSubmitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStateSubmitInternalServerError creates a StateSubmitInternalServerError with default headers values
func NewStateSubmitInternalServerError() *StateSubmitInternalServerError {
	return &StateSubmitInternalServerError{}
}

/*StateSubmitInternalServerError handles this case with default header values.

internal server error
*/
type StateSubmitInternalServerError struct {
	Payload string
}

func (o *StateSubmitInternalServerError) Error() string {
	return fmt.Sprintf("[POST /auth/session/state][%d] stateSubmitInternalServerError  %+v", 500, o.Payload)
}

func (o *StateSubmitInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *StateSubmitInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
