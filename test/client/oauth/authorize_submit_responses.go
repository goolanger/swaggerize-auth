// Code generated by go-swagger; DO NOT EDIT.

package oauth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AuthorizeSubmitReader is a Reader for the AuthorizeSubmit structure.
type AuthorizeSubmitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthorizeSubmitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthorizeSubmitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewAuthorizeSubmitInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAuthorizeSubmitOK creates a AuthorizeSubmitOK with default headers values
func NewAuthorizeSubmitOK() *AuthorizeSubmitOK {
	return &AuthorizeSubmitOK{}
}

/*AuthorizeSubmitOK handles this case with default header values.

operation success
*/
type AuthorizeSubmitOK struct {
}

func (o *AuthorizeSubmitOK) Error() string {
	return fmt.Sprintf("[POST /api/oauth/authorize][%d] authorizeSubmitOK ", 200)
}

func (o *AuthorizeSubmitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAuthorizeSubmitInternalServerError creates a AuthorizeSubmitInternalServerError with default headers values
func NewAuthorizeSubmitInternalServerError() *AuthorizeSubmitInternalServerError {
	return &AuthorizeSubmitInternalServerError{}
}

/*AuthorizeSubmitInternalServerError handles this case with default header values.

internal server error
*/
type AuthorizeSubmitInternalServerError struct {
	Payload string
}

func (o *AuthorizeSubmitInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/oauth/authorize][%d] authorizeSubmitInternalServerError  %+v", 500, o.Payload)
}

func (o *AuthorizeSubmitInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *AuthorizeSubmitInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
