// Code generated by go-bindata. (@generated) DO NOT EDIT.

 //Package auth generated by go-bindata.// sources:
// pkg/auth/html/basic/mail/activation.tmpl
// pkg/auth/html/basic/mail/base.tmpl
// pkg/auth/html/basic/mail/recovery.tmpl
// pkg/auth/html/basic/views/base.tmpl
// pkg/auth/html/basic/views/login.tmpl
// pkg/auth/html/basic/views/message.tmpl
// pkg/auth/html/basic/views/recovery.tmpl
// pkg/auth/html/basic/views/register.tmpl
// pkg/auth/html/basic/views/state.tmpl
// pkg/auth/html/default/mail/activation.tmpl
// pkg/auth/html/default/mail/base.tmpl
// pkg/auth/html/default/mail/recovery.tmpl
// pkg/auth/html/default/views/base.tmpl
// pkg/auth/html/default/views/login.tmpl
// pkg/auth/html/default/views/message.tmpl
// pkg/auth/html/default/views/recovery.tmpl
// pkg/auth/html/default/views/register.tmpl
// pkg/auth/html/default/views/state.tmpl
package auth

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _pkgAuthHtmlBasicMailActivationTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xca\x4f\xa9\x54\xaa\xad\xe5\x52\x50\x50\x50\x70\x4c\x2e\xc9\x2c\x4b\x2c\x49\x55\xa8\xcc\x2f\x2d\x52\x48\x4c\x4e\xce\x2f\xcd\x2b\xb1\x02\x4b\xd9\x24\x2a\x64\x14\xa5\xa6\xd9\x2a\x55\x57\xeb\xf9\x64\xe6\x65\xd7\xd6\x2a\xd9\x41\x95\x67\xe6\xe7\x29\x80\x84\x6c\xf4\x13\xed\xb8\xaa\xab\x53\xf3\x52\x6a\x6b\x01\x01\x00\x00\xff\xff\x81\x76\x50\xac\x60\x00\x00\x00")

func pkgAuthHtmlBasicMailActivationTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicMailActivationTmpl,
		"pkg/auth/html/basic/mail/activation.tmpl",
	)
}

func pkgAuthHtmlBasicMailActivationTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicMailActivationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/mail/activation.tmpl", size: 96, mode: os.FileMode(438), modTime: time.Unix(1601585518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicMailBaseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xbb\x8a\xc3\x30\x10\x45\x7b\x7d\xc5\xac\xea\xf5\x8a\xed\xb6\x90\xd4\x6c\x92\x2e\x24\x85\x53\xa4\x9c\x48\x03\x1e\x90\x64\x63\x0f\x36\xc1\xf8\xdf\x83\x63\x42\x52\xcd\xe3\x5c\x2e\xc7\x7e\xed\x4e\xff\xf5\xf5\xbc\x87\x46\x72\xf2\xca\xbe\x06\x61\xf4\x0a\x00\xc0\x66\x12\x84\xd0\x60\x3f\x90\x38\x7d\xa9\x0f\xd5\x9f\x06\xf3\x09\x0b\x66\x72\x7a\x64\x9a\xba\xb6\x17\x0d\xa1\x2d\x42\x45\x9c\x9e\x38\x4a\xe3\x22\x8d\x1c\xa8\x7a\x1e\xdf\xc0\x85\x85\x31\x55\x43\xc0\x44\xee\xf7\x5d\x25\x2c\x89\xfc\x11\x39\x59\xb3\xed\xca\x9a\xcd\xc3\xde\xda\x78\xf7\x6a\x9e\x85\x72\x97\x50\x08\xf4\xfa\xd1\xf0\xb3\x2c\xca\x9a\x8d\xae\xe9\x55\xfe\x11\x00\x00\xff\xff\x34\xdf\x71\xd9\xd3\x00\x00\x00")

func pkgAuthHtmlBasicMailBaseTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicMailBaseTmpl,
		"pkg/auth/html/basic/mail/base.tmpl",
	)
}

func pkgAuthHtmlBasicMailBaseTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicMailBaseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/mail/base.tmpl", size: 211, mode: os.FileMode(438), modTime: time.Unix(1601856851, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicMailRecoveryTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xca\x4f\xa9\x54\xaa\xad\xe5\x52\x50\x50\x50\x70\x2e\x4a\x4d\x49\xcd\x2b\xc9\x4c\xcc\x29\x56\x28\x4a\x4d\xce\x2f\x4b\x2d\xaa\x54\xc8\xc9\xcc\xcb\xb6\x02\x4b\xdb\x24\x2a\x64\x14\xa5\xa6\xd9\x2a\x55\x57\xeb\xf9\x64\xe6\x65\xd7\xd6\x2a\xd9\x05\xc1\x94\x81\x04\x6c\xf4\x13\xed\xb8\xaa\xab\x53\xf3\x52\x6a\x6b\x01\x01\x00\x00\xff\xff\x92\x81\x68\xf3\x62\x00\x00\x00")

func pkgAuthHtmlBasicMailRecoveryTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicMailRecoveryTmpl,
		"pkg/auth/html/basic/mail/recovery.tmpl",
	)
}

func pkgAuthHtmlBasicMailRecoveryTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicMailRecoveryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/mail/recovery.tmpl", size: 98, mode: os.FileMode(438), modTime: time.Unix(1601585518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicViewsBaseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x92\xcd\x0e\xd3\x30\x0c\xc7\xef\x3c\x85\xc9\x79\x69\xe1\x86\xa0\x99\x34\x21\x71\xe4\x80\x98\xc4\xd5\x6d\xbc\xd5\x52\xbe\x68\xdd\x7d\x10\xe5\xdd\xd1\x5a\xa0\xdd\xf0\xc9\xfe\xd9\xff\xd8\x4e\x92\x33\x58\x3a\x71\x20\x50\x2d\x8e\xa4\xa0\x94\x37\x00\x00\xcd\x5b\x1b\x3b\xb9\x27\x82\x5e\xbc\xdb\x2f\xec\xe1\x82\xc3\x70\x36\x8a\x82\xfa\x0b\x09\xed\xe2\xce\xa1\x27\x41\xe8\x7a\x1c\x46\x12\xa3\x8e\xdf\xbf\xe8\x0f\xea\x35\x1d\xd0\x93\x51\x17\xa6\x6b\x8a\x83\xa8\x7f\xd9\xc5\xba\x18\x84\x82\x18\x75\x65\x2b\xbd\xb1\x74\xe1\x8e\xf4\x1c\xec\x60\x1a\x69\xd0\x63\x87\x0e\x5b\x47\x26\xc4\x1d\x70\x60\x61\x74\x33\x24\xf3\xbe\x7a\xb7\x03\x8f\x37\xf6\x93\x7f\x42\x1c\x9e\xd1\x7f\x43\xf5\x22\x49\xd3\xcf\x89\x2f\x46\xfd\xd0\xc7\x83\xfe\x1c\x7d\x42\xe1\xd6\x91\x5a\x67\x62\x32\x64\xcf\xb4\x55\x0b\x8b\xa3\x7d\xce\x42\x3e\x39\x14\x02\x85\x9d\x70\x0c\x0a\xaa\x52\x40\x43\xce\xd5\xb7\x38\x09\x0d\xd5\x21\xa5\xaf\xe8\xa9\x94\xa6\x5e\x44\xeb\x21\xa3\xdc\xb7\xf1\xc3\x10\xf6\x30\x26\x0c\x90\x5f\x2e\x08\x40\xe8\x26\x5a\x06\x0c\xe3\x29\x0e\xfe\x23\x74\x98\x58\xd0\xf1\x2f\xfa\xf4\x54\x5b\xd6\x06\xf5\xa6\x43\x53\xaf\x8f\xd6\xb4\xd1\xde\x17\x77\xbb\xc2\x83\xce\x0b\xfc\x11\xac\x55\x4d\xbd\xfc\x88\x9c\x81\x82\x85\x52\x7e\x07\x00\x00\xff\xff\x42\x6e\x1f\x54\x43\x02\x00\x00")

func pkgAuthHtmlBasicViewsBaseTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicViewsBaseTmpl,
		"pkg/auth/html/basic/views/base.tmpl",
	)
}

func pkgAuthHtmlBasicViewsBaseTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicViewsBaseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/views/base.tmpl", size: 579, mode: os.FileMode(438), modTime: time.Unix(1601837929, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicViewsLoginTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x4f\x8f\x9b\x3c\x10\xc6\xef\xf9\x14\x23\xdf\x5f\xd0\xde\x81\xf7\xd0\x3f\xd2\x4a\xab\x2a\xca\xaa\xe7\xc8\xc1\x43\x18\x15\x6c\x64\x0f\xd9\x46\xae\xbf\x7b\x65\x07\x92\x10\xd1\x36\x37\x66\x9e\x79\x7e\xf3\x18\x19\xbc\x67\xec\x87\x4e\x32\x82\x38\x48\x87\x02\xb2\x10\x36\x1b\xef\x15\x36\xa4\x11\x84\xac\x99\x8c\x16\x21\xbc\x99\x23\x69\xef\x51\xab\xe5\xc0\xc1\xa8\xb3\x08\x61\x03\x00\x50\xb4\x2f\x55\x9a\x2b\xf2\xf6\xa5\xba\xb4\x1a\x63\x7b\xe8\x91\x5b\xa3\x4a\x31\x18\xc7\xe2\x22\x24\xb1\x93\x07\xec\xa0\x31\xb6\x14\xd8\x4b\xea\xfe\x6b\x08\x3b\x25\xaa\x2f\xb1\x28\xf2\x24\xdf\x8d\x93\x1e\x46\x06\x3e\x0f\x58\x0a\xc6\x9f\x2c\x40\xcb\x1e\x4b\x31\x3a\xb4\xf1\x49\xc0\xd0\xc9\x1a\x5b\xd3\x29\x9c\x91\x02\x48\x3d\xd0\x57\xf7\x0f\xd2\xb9\x0f\x63\xd5\x3c\xb4\x9d\xea\xbf\xa7\x98\x5d\x73\x92\x5b\xbd\x48\x72\x6b\xc7\x30\x8f\xab\x36\xeb\xec\x96\x94\x42\x3d\x93\x2d\xba\xc1\x68\x87\xfb\x28\x0a\x38\xc9\x6e\xc4\x52\xd4\x46\xa1\xf8\x43\xb6\xa5\xbf\xee\x08\x35\xef\x49\x5d\xbd\xde\x67\x5b\x69\x65\xef\xb2\x4f\x49\x7b\xfd\x1c\xc2\x73\x2c\x8b\x8a\x2c\xd6\xbc\x1f\x2d\xad\xe0\x76\x93\xfc\x7d\xf7\xfa\x2c\xd1\xd5\xe6\xee\x54\x37\xd4\x7b\xec\x3f\x0d\x61\xc9\xab\x90\xd8\x4f\x90\x75\x8a\x1b\x0f\x3d\xf1\xd5\x98\x6e\xf0\xb4\xb1\xc8\xe3\xfd\x9d\x8c\x85\x84\xd6\x62\x93\xd0\x3b\x33\x32\xda\xec\x1d\x9d\x23\xa3\x77\x78\x24\xc7\x68\xb7\x92\xdb\xb8\x68\xae\x8b\x5c\x56\xbf\xfe\xe1\x4d\xe9\x66\xe3\x57\x63\x8f\x86\xe1\x6c\x46\x0b\xf3\x35\xf9\x3f\x52\xa6\x04\x8a\x4e\xb7\x57\xe1\xbd\x95\xfa\x88\x90\x6d\xad\x39\x91\x42\xeb\xa6\xef\xf0\x7a\xca\xc5\xf8\xb5\x7b\x17\xe5\x8d\xf4\x8f\xb8\x37\x9d\x19\x3e\x88\x5b\x28\xdc\x20\x75\xe5\x7d\xf6\x4d\xf6\x18\x42\x91\xa7\x3a\x65\x58\x50\xf2\x87\x2c\x97\x3f\xc3\x9d\x34\xb5\x7e\x07\x00\x00\xff\xff\x5a\x29\x1c\xa4\x63\x04\x00\x00")

func pkgAuthHtmlBasicViewsLoginTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicViewsLoginTmpl,
		"pkg/auth/html/basic/views/login.tmpl",
	)
}

func pkgAuthHtmlBasicViewsLoginTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicViewsLoginTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/views/login.tmpl", size: 1123, mode: os.FileMode(438), modTime: time.Unix(1601837973, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicViewsMessageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xc1\x6e\xf2\x30\x10\x84\xef\x79\x8a\x91\x4f\xff\x7f\x81\x17\xa0\x48\x9c\x7a\xaa\xc4\xb5\xc7\x8d\x3d\x81\x88\xc4\x6e\xbd\x0e\x15\xb2\xf2\xee\x55\x42\x0a\x54\x05\xda\xaa\xb7\xac\xf2\xed\xa7\xf5\x4c\xce\x89\xed\x4b\x23\x89\x30\xa5\x28\x0d\x66\x7d\x5f\x14\x39\x3b\x56\xb5\x27\x8c\xd8\x54\x07\x6f\xfa\xfe\x89\xaa\xb2\x61\xce\xf4\xee\x2b\xb2\x97\x09\x5b\x79\x9c\x67\x34\xb5\xdf\x61\x2b\x8a\x92\xf4\x50\xfa\x84\x14\x70\x08\x5d\x04\x5b\xa9\x1b\x88\xb5\xa1\xf3\xe9\x8a\x35\xd2\x86\x3d\xe3\x61\x70\xe2\x63\xf8\x8b\x70\x3a\x8b\xce\xf4\xfd\xf3\xb0\x30\xa1\x93\xae\xf6\x1b\x9c\x90\xdb\xf7\x8c\xeb\x6b\x51\x7d\x0b\xd1\x21\x52\x99\xa0\x9d\xb5\x54\xad\xba\xa6\x39\x5c\xd9\x2c\x83\x1b\x5e\x51\x00\x40\xce\x75\x85\x7f\x7c\xc5\x6c\x2d\x51\x5a\x9d\xad\xc6\x7c\x3f\x85\xf8\x7f\x62\x8f\xfc\xb9\x9f\x0b\x64\x6c\xe9\xf8\x9f\x8d\x12\xf7\xa5\x74\xdf\x39\xe9\x7e\xaa\x3c\xd5\x72\xcb\x78\x02\x7e\x27\xbc\x73\xe3\x99\xb8\x54\x8e\x29\x0f\xdf\x0b\xc1\x36\xb2\x7a\x30\x73\xb3\x7c\x0c\x28\xc5\xee\xb0\x0d\x2d\x17\x73\x59\x16\x13\xf8\x1e\x00\x00\xff\xff\x9e\xee\x26\x57\xe7\x02\x00\x00")

func pkgAuthHtmlBasicViewsMessageTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicViewsMessageTmpl,
		"pkg/auth/html/basic/views/message.tmpl",
	)
}

func pkgAuthHtmlBasicViewsMessageTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicViewsMessageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/views/message.tmpl", size: 743, mode: os.FileMode(438), modTime: time.Unix(1600402845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicViewsRecoveryTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xcd\x8e\xab\x30\x0c\x85\xf7\x3c\x85\xe5\x7d\x8b\xba\x07\xd6\x77\x59\xf5\xce\x0b\x18\x62\x44\x34\x49\x8c\x12\xd3\xaa\x8a\xf2\xee\x23\x5a\xa6\x3f\x1a\x75\x87\x7d\xce\xf7\x61\x29\x39\x2b\xfb\xd9\x91\x32\x60\x4f\x89\x11\xf6\xa5\x54\x55\xce\x86\x47\x1b\x18\x90\x06\xb5\x12\xb0\x94\x13\x0f\x72\xe6\x78\xcd\x99\x83\x79\xef\xf4\x62\xae\x58\x4a\x05\x00\xd0\x4c\x87\xee\xc4\x89\x15\x8e\x94\xd2\x45\xa2\x69\xea\xe9\xd0\xdd\xb3\x51\xa2\x07\xcf\x3a\x89\x69\x71\x96\xa4\x78\x0f\x6e\xa1\xa3\x9e\x1d\x8c\x12\x5b\x9c\x37\x74\x37\x5a\x76\x06\xbb\xa7\xea\x56\x7a\x81\x6c\x98\x17\x05\xbd\xce\xfc\xa4\x10\xac\xf9\xe3\x80\xc1\x51\x4a\x2d\xae\x27\xec\x6e\x14\x42\x20\xff\x86\xcd\x8e\x06\x9e\xc4\x19\x8e\x2d\x72\x50\x8e\x10\xf8\x02\x8f\xc2\x87\xff\x4e\xd6\x18\x0e\xbf\x3a\x95\xef\x75\x38\x93\x5b\xb8\xc5\x9c\xf7\x47\x8a\xe4\xd3\xfe\x6b\xdd\x97\xf2\x49\x92\x96\xde\x5b\x7d\x70\xff\xb7\xf1\xf5\xea\x7e\x51\x95\xb0\x09\x9a\x7a\xdd\x6d\xdf\x04\x53\xe4\xb1\xc5\x1a\xbb\x7f\xe2\xb9\xa9\xa9\xab\xb6\x77\xfa\x09\x00\x00\xff\xff\xda\xa5\x65\x59\xe1\x01\x00\x00")

func pkgAuthHtmlBasicViewsRecoveryTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicViewsRecoveryTmpl,
		"pkg/auth/html/basic/views/recovery.tmpl",
	)
}

func pkgAuthHtmlBasicViewsRecoveryTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicViewsRecoveryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/views/recovery.tmpl", size: 481, mode: os.FileMode(438), modTime: time.Unix(1600402845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicViewsRegisterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xcd\x6e\xe2\x30\x10\xc7\xef\x79\x8a\xd1\xdc\x21\xe2\x9e\x44\xda\xc3\xde\x56\x5a\x44\x9f\x60\x82\x27\xd8\x92\x63\x47\xf6\xb8\x2d\xb5\xfc\xee\x55\xc0\x08\xa8\x54\x6e\x99\xff\x57\x7e\x07\xe7\x2c\x3c\x2f\x96\x84\x01\x47\x8a\x8c\xb0\x2d\xa5\x69\x72\x56\x3c\x19\xc7\x80\x74\x14\xe3\x1d\x96\x72\xe0\x93\x89\xc2\x21\x67\x76\xea\x39\x33\x7a\x75\xc6\x52\x1a\x00\x80\x4e\xef\x86\x5b\xb4\x6b\xf5\x6e\xb8\xaa\x93\x0f\x33\xcc\x2c\xda\xab\x1e\x17\x1f\x05\xaf\xc6\xc5\xb4\x34\xb2\x85\xc9\x87\x1e\x79\x26\x63\x37\x93\x61\xab\x70\xf8\xbb\x1e\x5d\x7b\xb1\x1f\xe2\xc6\x2d\x49\x40\xce\x0b\xf7\x28\xfc\x29\x08\x46\x3d\x37\xc1\xd1\xcc\x55\x42\x58\x2c\x1d\x59\x7b\xab\x38\xf4\xb8\xd6\xe0\xec\x53\x80\xea\x1e\x2d\xc5\xd8\xe3\x0a\xb8\xb9\x2c\xff\x42\xb6\x50\x8c\x1f\x3e\xa8\x1b\xdc\xbe\xde\xaf\xf9\x6e\xad\x2b\xe3\x8f\x8d\x8a\x79\xcf\x3c\x91\xde\xe5\x97\x88\x8f\x7f\x8b\x69\x9c\x8d\x20\xbc\x93\x4d\xdc\xe3\x5b\x3d\x1f\xfb\x63\x12\xf1\xae\x0e\x74\xed\xaa\xd5\x6f\x02\x1d\x78\xea\x31\xe7\xed\xc1\x27\xe1\xb0\xfd\x4f\x49\xf4\x9f\x24\xda\x07\xf3\xc5\x7b\x12\x5d\x0a\x0e\xff\xfc\xc9\xb8\xae\xa5\xa1\xa9\x4f\xe1\x3b\x00\x00\xff\xff\xab\x42\x65\x34\x44\x02\x00\x00")

func pkgAuthHtmlBasicViewsRegisterTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicViewsRegisterTmpl,
		"pkg/auth/html/basic/views/register.tmpl",
	)
}

func pkgAuthHtmlBasicViewsRegisterTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicViewsRegisterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/views/register.tmpl", size: 580, mode: os.FileMode(438), modTime: time.Unix(1601585447, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicViewsStateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x4d\x6e\xe3\x30\x0c\x85\xf7\x3e\x05\xc1\x7d\x6c\x64\x6f\x1b\xc8\x62\x76\x03\x4c\x30\x3d\x01\x1d\xd1\x95\x00\xfd\x18\x32\x55\x34\x15\x74\xf7\xc2\x8e\x82\x26\x68\xbb\x13\xf9\xf1\xf1\x11\x4f\x39\x0b\xbb\xc5\x92\x30\xe0\x44\x2b\x23\xb4\xa5\x34\x4d\xce\x8a\x67\xe3\x19\x90\x2e\x62\x82\xc7\x52\x4e\xfb\x23\x67\xf6\xea\x79\x62\x0a\xea\x8a\xa5\x34\x00\x00\xbd\x3e\x8e\x39\xb7\x67\x8a\xe4\xd6\xf6\x26\x29\xa5\xef\xf4\x71\xbc\xf1\x39\x44\x07\x8e\x45\x07\x35\xe0\x12\x56\xc1\x1b\xd8\xa1\xa5\x89\x2d\xcc\x21\x0e\xc8\x8e\x8c\x3d\xcc\x86\xad\xc2\xf1\xcf\x56\xf4\xdd\x8e\x1f\xc6\x8d\x5f\x92\x80\x5c\x17\x1e\x50\xf8\x5d\x10\x8c\x7a\x56\x82\x27\xc7\xb5\x85\xb0\x58\xba\xb0\x0e\x56\x71\x1c\x70\x93\xc1\x35\xa4\x08\x95\x5e\x2c\xad\xeb\x80\xdb\x81\x87\x7d\x33\xc2\x1b\xd9\xc4\x03\xe2\xd8\xfc\x6c\xaa\x8d\x52\xec\xef\x2e\x35\xa9\xbb\xea\x7b\x0c\xd8\xfd\xb6\x68\x4d\x93\x33\x5f\x86\x2f\xb5\x7c\x3c\x69\x4a\x22\xc1\xd7\xb4\xfa\x6e\xeb\xd5\x37\x81\x8e\x3c\xef\x86\xff\x43\x12\x8e\xed\x3f\x4a\xa2\x4f\x49\x74\x88\xe6\x83\xcf\x24\xba\x14\x1c\xff\x86\x57\xe3\xfb\x8e\xc6\xa6\x7e\xe2\x67\x00\x00\x00\xff\xff\x64\xe2\xc2\x2a\xfc\x01\x00\x00")

func pkgAuthHtmlBasicViewsStateTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicViewsStateTmpl,
		"pkg/auth/html/basic/views/state.tmpl",
	)
}

func pkgAuthHtmlBasicViewsStateTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicViewsStateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/views/state.tmpl", size: 508, mode: os.FileMode(438), modTime: time.Unix(1601588707, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultMailActivationTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xca\x4f\xa9\x54\xaa\xad\xe5\x52\x50\x50\x50\x70\x4c\x2e\xc9\x2c\x4b\x2c\x49\x55\xa8\xcc\x2f\x2d\x52\x48\x4c\x4e\xce\x2f\xcd\x2b\xb1\x02\x4b\xd9\x24\x2a\x64\x14\xa5\xa6\xd9\x2a\x55\x57\xeb\xf9\x64\xe6\x65\xd7\xd6\x2a\xd9\x41\x95\x67\xe6\xe7\x29\x80\x84\x6c\xf4\x13\xed\xb8\xaa\xab\x53\xf3\x52\x6a\x6b\x01\x01\x00\x00\xff\xff\x81\x76\x50\xac\x60\x00\x00\x00")

func pkgAuthHtmlDefaultMailActivationTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultMailActivationTmpl,
		"pkg/auth/html/default/mail/activation.tmpl",
	)
}

func pkgAuthHtmlDefaultMailActivationTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultMailActivationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/mail/activation.tmpl", size: 96, mode: os.FileMode(438), modTime: time.Unix(1601585518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultMailBaseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xbb\x8a\xc3\x30\x10\x45\x7b\x7d\xc5\xac\xea\xf5\x8a\xed\xb6\x90\xd4\x6c\x92\x2e\x24\x85\x53\xa4\x9c\x48\x03\x1e\x90\x64\x63\x0f\x36\xc1\xf8\xdf\x83\x63\x42\x52\xcd\xe3\x5c\x2e\xc7\x7e\xed\x4e\xff\xf5\xf5\xbc\x87\x46\x72\xf2\xca\xbe\x06\x61\xf4\x0a\x00\xc0\x66\x12\x84\xd0\x60\x3f\x90\x38\x7d\xa9\x0f\xd5\x9f\x06\xf3\x09\x0b\x66\x72\x7a\x64\x9a\xba\xb6\x17\x0d\xa1\x2d\x42\x45\x9c\x9e\x38\x4a\xe3\x22\x8d\x1c\xa8\x7a\x1e\xdf\xc0\x85\x85\x31\x55\x43\xc0\x44\xee\xf7\x5d\x25\x2c\x89\xfc\x11\x39\x59\xb3\xed\xca\x9a\xcd\xc3\xde\xda\x78\xf7\x6a\x9e\x85\x72\x97\x50\x08\xf4\xfa\xd1\xf0\xb3\x2c\xca\x9a\x8d\xae\xe9\x55\xfe\x11\x00\x00\xff\xff\x34\xdf\x71\xd9\xd3\x00\x00\x00")

func pkgAuthHtmlDefaultMailBaseTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultMailBaseTmpl,
		"pkg/auth/html/default/mail/base.tmpl",
	)
}

func pkgAuthHtmlDefaultMailBaseTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultMailBaseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/mail/base.tmpl", size: 211, mode: os.FileMode(438), modTime: time.Unix(1601856851, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultMailRecoveryTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xca\x4f\xa9\x54\xaa\xad\xe5\x52\x50\x50\x50\x70\x2e\x4a\x4d\x49\xcd\x2b\xc9\x4c\xcc\x29\x56\x28\x4a\x4d\xce\x2f\x4b\x2d\xaa\x54\xc8\xc9\xcc\xcb\xb6\x02\x4b\xdb\x24\x2a\x64\x14\xa5\xa6\xd9\x2a\x55\x57\xeb\xf9\x64\xe6\x65\xd7\xd6\x2a\xd9\x05\xc1\x94\x81\x04\x6c\xf4\x13\xed\xb8\xaa\xab\x53\xf3\x52\x6a\x6b\x01\x01\x00\x00\xff\xff\x92\x81\x68\xf3\x62\x00\x00\x00")

func pkgAuthHtmlDefaultMailRecoveryTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultMailRecoveryTmpl,
		"pkg/auth/html/default/mail/recovery.tmpl",
	)
}

func pkgAuthHtmlDefaultMailRecoveryTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultMailRecoveryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/mail/recovery.tmpl", size: 98, mode: os.FileMode(438), modTime: time.Unix(1601585518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultViewsBaseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6d\x57\xa3\xba\xb7\x7f\x3f\x9f\x22\xd7\xb3\xce\xd5\x99\x23\x2d\xa5\xd4\xb1\x9d\x71\xee\xa9\x6d\x55\x3c\x04\x1d\x5b\x47\xdb\x37\x67\x05\x88\x34\x08\xa4\x7f\x08\xa5\xe0\xf2\xbb\xdf\x15\x68\xb5\x0f\xe9\x83\xce\x9c\x73\xdf\xdc\xae\x71\x4a\x43\xb2\xb3\xb3\xf7\x2f\xbf\xec\xec\xc0\xd3\x13\xb0\xf1\x03\x09\x30\xd8\x33\x51\x84\xf7\xc0\xf3\xf3\x07\x00\x00\xf8\xfa\x5f\x36\xb5\x58\x3a\xc2\x60\xc8\x7c\xef\x5b\x51\xc6\x2f\x81\x87\x02\xe7\x64\x0f\x07\x7b\xb3\x42\x8c\xec\xe2\x32\xff\xe9\x63\x86\x80\x35\x44\x61\x84\xd9\xc9\xde\x6d\xef\x4c\x3a\xde\x5b\xbe\x1d\x20\x1f\x9f\xec\x8d\x09\x4e\x46\x34\x64\x7b\x2f\x77\x8b\x8f\x45\x03\x86\x03\x76\xb2\x97\x10\x9b\x0d\x4f\x6c\x3c\x26\x16\x96\xf2\x1f\x87\x20\x8e\x70\x28\x45\x16\xf2\x90\xe9\xe1\x93\x80\x1e\x02\x12\x10\x46\x90\x97\x17\xe2\x93\x4a\x49\x3e\x04\x3e\x9a\x10\x3f\xf6\x17\x8a\x48\xb0\x58\xb4\xa2\xd4\x90\xb1\x91\x84\xff\x13\x93\xf1\xc9\xde\xbd\x74\xdb\x94\x5a\xd4\x1f\x21\x46\x4c\x0f\xef\xbd\xea\x44\xf0\x09\xb6\x1d\x3c\xdf\x9a\x11\xe6\xe1\x6f\x4f\x4f\x0c\xfb\x23\x0f\x31\x0c\xf6\x90\xc5\x08\x0d\xf6\x40\xe9\xf9\x19\x48\xe0\xe9\xa9\x74\x43\x63\x86\xc3\x52\x73\x34\x32\x90\x8f\x9f\x9f\xbf\x96\x8b\x46\xaf\x42\x22\x96\xce\xff\xe6\x9f\x3f\x89\xcf\xcd\x03\xe2\xd0\x3b\xd8\xe7\xda\x45\x8d\x72\xf9\x81\x06\x2c\x2a\x39\x94\x3a\x1e\x46\x23\x12\x95\x2c\xea\x97\xad\x28\xfa\x9f\x07\xe4\x13\x2f\x3d\x81\xb1\x47\xfe\xdb\x26\xd1\xc8\x43\xe9\x49\x94\xa0\xd1\xfe\xc7\x2f\x1f\x16\xc4\x7e\x02\x4f\x4b\x06\x07\xc0\xa4\x13\x29\x22\x19\x09\x9c\x06\x30\x69\x68\xe3\x50\x32\xe9\xe4\xcb\x42\xbd\xe7\x0f\x8b\x72\x4c\x6a\xa7\x22\x51\xc8\x7a\x74\x42\x1a\x07\x76\x03\x78\x24\xc0\x28\x94\x9c\x10\xd9\x04\x07\xec\x40\xad\xd9\xd8\x39\x04\xbf\x3d\xe4\x9f\x43\xf0\x9b\x9d\x7f\x3e\x7e\x59\x91\xc2\x87\x29\x15\x43\x6a\x80\x7d\x3e\xa8\xfd\x43\x10\xa1\x20\x92\x22\x1c\x92\x87\xd5\x06\xd3\x21\x37\xc0\x83\x87\x27\xab\xb7\x91\x47\x9c\x40\x22\x0c\xfb\x51\x03\x58\x38\x60\x38\x5c\xad\xe4\xc6\x11\x23\x0f\xa9\x34\x75\xf6\xfa\x8a\xbc\x0f\xc9\x26\x21\xce\xfd\xdc\x00\x16\xf5\x62\x3f\x58\xad\xe7\x93\x40\x1a\x62\xe2\x0c\x59\x03\x54\x64\x79\x3c\x14\x54\x41\xa1\x43\x82\x06\x90\x57\x8c\x3d\xff\x93\x04\xa3\x98\x09\x8c\xfd\x66\x33\xd1\x98\x71\xa7\x34\x40\x40\x03\xbc\xb1\xcb\x92\x45\xe3\x30\xc2\x51\x6e\x0d\x44\x02\x1c\x82\xa7\x0f\x3b\x34\xd8\x08\x09\xc9\xa2\x1e\x0d\x1b\x39\x02\x56\x95\x9b\x22\x8f\xa3\x25\x8e\xb8\xc5\x46\x02\x4f\xe6\x50\x1d\x22\x9b\x26\x0d\x20\xe7\x75\x8a\xff\x42\xc7\x44\x07\xf2\x21\x98\xfe\x2b\x29\x02\x54\x6d\x01\x89\x8f\x26\x05\xcd\xe4\xde\xfa\x7d\xbd\xb3\x14\xa1\x66\x74\x8c\xc3\x07\x8f\xeb\x35\x24\xb6\x8d\x83\x5d\xcc\x0b\x86\x47\x02\x83\xd1\x11\xb2\x08\x4b\x1b\x40\x2e\x1d\xed\x0c\x19\xfe\xf1\x30\x63\x9c\x1f\x79\x7b\x3e\x97\x2b\x22\x3d\x19\x9e\x30\x89\x85\x28\x88\x1e\x68\xe8\x37\x40\x3c\x1a\xe1\xd0\x42\xd1\x4e\x78\x00\x43\x45\xa0\xf0\x4e\xfd\xce\xf4\xce\xdd\xb5\x19\xef\xd3\xce\xa4\x51\x88\xf9\x2a\xb1\x1b\xa6\x14\x45\x59\xed\x74\x23\xe0\x46\xc8\xb6\x73\x7d\xab\x42\x87\xce\xe1\x41\xa9\xad\xd4\xd8\xa2\x32\x12\x28\xbd\x51\x99\x17\x70\x92\x80\x4f\x51\xc9\xf4\xa8\xf5\xb8\x86\x19\x23\x92\xe1\x06\xa8\x28\x42\x18\xee\x00\x1e\x89\xd1\xd1\xba\x51\xe7\xf0\xb0\xb1\x45\x43\x54\xb0\xdb\xae\x54\xf1\x32\xf4\x6f\x62\x90\x2c\xe3\xce\x42\x23\xc2\x90\x47\xb2\xdd\xa4\x93\xe0\x81\x0a\xa4\x6e\xf1\xe1\x88\x46\xa4\x18\x46\x88\x3d\xc4\xc8\x18\xaf\xd6\xd9\x38\xe7\x73\xad\xf3\xe5\x43\xbc\x1e\x2c\x6b\x3b\x0a\xa9\x13\xe2\x68\x91\x37\xd7\x6b\x85\xcc\x88\x7a\x31\x13\x68\xb5\xc1\x45\x61\xb1\xa4\x6c\xf0\xdf\x54\xe1\xbc\xe2\xfa\x01\x6f\x07\xf5\x6c\x34\xbb\xcd\x40\xdb\xb6\xb7\xb2\x7a\x55\xa4\xf3\x6c\x91\xac\x89\x6e\xae\x75\xcf\x3a\x65\x1b\x0d\xf4\xc0\x84\x76\xdf\x45\x97\xdd\x99\x65\x1a\x25\xec\xef\x6f\x82\xdd\x16\x07\x0b\x49\xfc\x81\x09\x6f\xec\x62\xa5\xa3\xa3\x1d\x8d\x24\x71\x9c\xac\x0b\x29\xa6\xfc\x22\x5e\xe6\x36\xf2\xcb\xd6\x95\x60\x59\x1f\x93\x05\x3f\x41\xef\x85\x43\x85\xd6\x5a\xf2\xf5\x2a\xd6\xc1\x4f\x46\x13\x1b\xd9\x7c\xde\x8c\x47\x42\x62\x9a\xf1\x16\x67\x71\xa0\x08\x7d\xba\xfb\x72\xbe\x99\xaf\xc1\x36\x92\xb3\xe2\x30\xe2\x63\x19\x51\x22\x8e\x78\xdf\x10\x37\x72\x72\x97\xf8\xa6\x50\x38\x03\xdf\xbb\x08\xe4\x52\xd7\x85\xc1\xab\x68\x49\x86\x44\x34\xe5\x66\x70\xa9\x8c\x26\x20\xa2\x1e\xb1\x37\xc2\xea\x5f\xc0\x8e\x2c\x0b\x90\x3b\x8f\x1d\xf5\x1f\xc5\xce\xce\xd4\x9a\x9b\x9f\x33\x5e\x48\x3d\x81\x03\xe6\xa3\x0a\x31\x6b\xbc\xad\x27\x9b\x8c\x49\x44\xa8\x88\x19\xe6\xbb\x52\xd7\x84\x6d\x79\x0d\x93\x32\x46\x7d\x91\x3e\x82\x2e\x1d\xca\xa4\x11\x8a\xa2\x84\x86\xf6\xbb\xc6\x37\x75\xa8\xe9\x21\x51\xd0\xf6\x96\xd1\x2f\xa8\xf2\x4d\x18\x47\xce\x51\x70\xfd\x9f\xdd\x04\x80\x5d\x56\x84\x77\x44\x8c\xa3\x90\x8e\x89\x8d\xc3\x48\x32\xe9\x44\x30\xc2\x2d\x3b\xb5\x7c\x03\x9e\x84\x68\xc4\xfb\xe2\xdf\xdb\xf7\xe8\x21\x4d\x7e\x62\xc7\xbf\x90\x3f\x88\x18\x0a\x05\x51\x55\x51\xe7\x45\x14\xb7\x3f\x96\xf0\x18\x07\x5e\xba\x9b\x31\x04\x76\x98\x02\x47\x0c\xf4\x59\x3c\x20\xbe\x5b\xfe\xb4\xc2\x62\xbf\x7f\xf9\x54\x16\x1a\x8a\x13\x98\x0c\x50\xcc\xe8\x86\xed\xe6\x6a\xdc\xb1\x6e\x20\x8d\x21\xdf\x0b\x6f\x02\x6e\xa9\xb6\xa3\x49\xc4\x13\xe0\x1d\x88\x2b\x52\x66\xd2\x06\x5b\xcf\xad\x22\xc4\x47\x0e\x6e\xe4\x99\xb7\x3d\x1b\x31\xd4\xc8\x0b\xca\xd1\xd8\xf9\x63\xe2\x7b\x5f\x4c\x14\xe1\x23\xf5\xf0\xfa\xc2\x50\x06\xe9\xe9\x68\xd0\x96\xc9\x40\xa9\x8f\x07\xca\xc4\xd3\x48\xf3\x2f\xad\xd5\x74\xb4\x8b\x21\x33\xcf\x6b\xd9\x75\xf7\x92\xda\x17\x37\xc9\x15\x39\x1e\xdb\x55\xbb\xaa\x07\x56\xa6\xfb\xf5\x74\x90\x1e\xa7\xb0\xdd\x4c\xf4\x2a\x97\xa1\x39\xb6\xef\x79\xb6\x7c\x39\xc6\x6d\x99\xc0\x56\x33\xd1\xda\xb0\x92\xff\xb9\x6a\x21\xaf\x3d\x49\xfa\xf7\x37\x54\x3b\x37\xa2\xfe\xbd\xc1\xe5\x46\xa6\x62\x8f\x35\x72\xea\xa3\xbb\x49\x74\xdd\xd5\x5c\xa3\xad\xa9\xc6\x5d\x5f\xd6\xc8\xe9\xe3\x75\xf7\xd2\x80\x6e\x3f\x36\xdc\xef\x11\xec\x39\x31\xf4\x3b\x13\xd8\x52\x33\xa3\x95\xcc\xbe\x13\xbd\xdd\x8c\x60\x4b\x8e\x61\xaf\xcf\x60\x57\x55\x8d\x8e\x33\xb9\xba\xe8\x67\xba\xfb\x5d\x45\xed\xef\xf1\x55\xfb\xe6\xd4\x68\xa9\x13\xa3\x95\xc8\xba\xdb\x91\x8b\xfa\xc9\x44\x6f\x6b\xfc\x2f\xd5\xdd\x5b\xc5\x76\xb5\x18\xba\x03\x0d\xba\x37\xc3\xab\x96\x5a\xbd\x6a\x25\xaa\xee\x5a\xea\xb4\x6e\xa2\xb7\xb5\xd8\x70\x1d\x66\x10\x55\x81\x1e\x25\x7a\xb6\x76\x3c\xc4\xac\xde\xc8\xa6\x22\x3b\xe6\x79\x3d\x30\x53\xcd\x19\xf8\x5e\x64\xb6\x65\xa2\x65\x50\xee\xf7\x9c\x0a\xe4\x65\x6d\x99\xf4\x7a\x1d\x55\x6f\x6b\xd5\x7e\xcf\x89\x8d\xde\x63\x74\xd5\x52\x2b\x57\xdd\xd9\x78\x12\x45\xef\x69\x31\xec\x0d\x21\x74\x3b\x11\x74\xb5\xd8\xe8\x0d\x4e\x8d\xae\x2a\xc3\x34\xa9\xe8\xee\xf7\xec\x75\x1c\x9d\x4c\x6f\x77\x6a\xba\x6b\x4d\xba\xed\x4e\xf2\xc3\xd5\xd2\x3e\x97\xf7\x2a\x4b\xd5\xdb\x3f\x90\x46\x8e\xff\x68\x91\xa6\xa3\xb5\x9a\xc7\xd6\xf9\x99\x8c\x5a\xa7\xae\x79\x7e\x96\x59\x99\x4c\xcc\xf3\x1f\xbe\xdd\x3a\x5d\xf1\xc5\xc0\xbf\x24\xfd\xac\x59\x79\xf1\x45\x0f\x46\xb0\xf7\x18\x1b\xd9\xd9\xd0\xe8\xaa\x19\x24\x5c\x17\x98\xbe\xea\xd2\x64\x30\x55\x65\xe8\xf5\x27\xdc\x0f\xb0\xd3\xa9\xe9\xed\xc7\xa9\x0d\x9b\x11\xec\x35\x23\xe8\x5e\x46\x30\x95\x53\xdd\x85\xd9\x1d\xd1\xc6\xd7\x0e\xe5\x3a\x39\xd7\x17\xa7\x43\xfb\xdc\x71\xfa\xca\x64\x68\x55\x61\x5d\x0b\x6e\xc6\x96\x48\xa7\xbb\x8e\x0c\x33\x38\xa7\x93\x13\xc1\x1e\xb7\xcf\x70\x68\xb4\x54\xd5\x20\xdc\xcf\x8e\xf2\xaa\x13\x8c\x8d\xf6\xf7\x08\x76\xd5\xcc\xb8\x4d\xd2\x1c\x3b\xfc\xba\xd3\x51\x75\xb7\x5f\xd1\xdb\x4e\x6c\xb8\xb7\x73\x3a\x3a\xd1\xd5\xdd\x82\xde\xec\xaa\x95\x54\xcc\x36\x8c\x20\x51\x33\xa8\x74\xf8\x98\x15\xbd\x7d\x1b\xc3\xac\x3f\xad\xd3\x89\x8c\xae\x9c\x71\x1f\xdc\x11\xcd\xe1\xf8\xb8\x6e\xd5\x33\xdb\xb7\xfe\xd8\x13\x04\x4e\x73\x93\xb4\x58\x92\x2c\x4e\x35\x6f\x0c\x77\xe7\x72\xb2\xdb\xd6\x63\x64\x61\x93\xd2\xc7\x5f\xcb\x1b\xed\xba\x6a\xde\x25\x8e\xed\xff\x48\x2d\xc5\x1b\x9b\xae\x4c\x60\x57\x4d\x34\x72\xea\x99\xbe\x31\x1e\x9c\x7b\xf1\x20\x93\x89\x7d\x7f\xe3\xeb\x3d\x87\x5c\x73\x9b\x14\x5c\xa3\x0c\xee\x2f\x33\x74\x57\x8f\xaf\xbb\xda\x44\x77\x3b\x44\x3b\xf7\xb8\x2f\xfd\xfe\x9d\xe1\xf5\xfd\xfa\x18\xa5\x9a\x83\xcf\x2b\x91\x19\xc0\x23\x4b\x61\x9e\x7d\x6e\xd0\x15\x0e\xf2\x2f\xc7\xe8\xfc\x07\x43\x77\x67\x71\x5f\xa9\x3f\xa2\xbb\x5a\xa0\xfb\xc6\xd8\xec\xd6\x33\xa4\xfc\x90\xfb\x8a\x33\x36\x03\x48\x5a\xce\xe3\x4c\x56\x5d\xf3\x87\xb2\x7d\xd1\x3c\xd2\xd3\x7a\xd5\xae\x5a\xb1\x9d\xc1\xd8\xac\x5e\x06\x7a\xa6\x25\xb0\xdd\x1c\x5b\xd5\x41\xa0\x91\x53\xd5\xbc\x9b\xc4\x56\x36\x52\xcd\x73\x2f\x46\x99\x4c\xd0\xc5\x8d\x6c\xb5\xe9\x58\xaf\xda\x55\x3b\xad\x55\x61\x5a\x1b\x5b\xbe\x35\x86\xbd\xc7\xda\x55\xb7\x5e\xd4\xe3\x3a\x73\xde\xbb\x38\x55\x35\x72\x5a\xbb\xee\x6a\x89\x75\xe1\x10\xed\x62\x30\x1a\xdc\xdb\x2d\xb3\xea\xd4\x35\xb7\xe9\xc0\x56\xb3\x02\xdb\x4d\xc7\xe8\x35\x13\xcd\xa1\x97\xda\x85\x21\xe3\xbb\x89\x77\xdd\xbd\xf4\x4c\xff\x8c\x98\xe7\xb7\xac\xef\x9f\xb9\x48\xb1\x53\xb3\xfa\x23\x1e\xb4\x47\xf1\xe0\xde\x72\x0a\x3e\xbd\x4d\xa6\xed\x3f\x17\x7a\x26\x47\x56\xf5\x74\xd8\x57\x6e\xeb\x5a\x70\x9a\x0e\xee\x0d\xcf\x0a\x06\x1e\xe7\xdb\xd9\x7c\x7a\xe5\x1f\xa3\x6d\xdc\x76\x6a\x57\xdd\x17\xfe\xc9\x8c\x96\x5a\xd5\xdb\x9d\x14\x9e\x43\x06\x7b\x30\x36\xd2\x24\xd1\x5d\x7e\xfd\x9d\x5f\x4f\xf2\xfb\xbd\x8e\xac\xbb\x56\x94\x97\x55\x61\xa2\x17\x7c\x24\xeb\x2e\xe4\xd8\x4f\x61\x66\xc5\x06\x6f\xdf\x52\x0b\x2e\xe2\xf7\xe7\xdb\xb7\xe7\xda\x2b\xc9\x04\xba\x56\x7c\xd5\x4a\x38\x4f\xa9\x30\x55\x95\x96\xe3\x51\xbd\x07\x65\xdd\x1d\x2a\x7a\xef\x7b\xa2\xbb\x06\x85\xd9\xf7\xf8\xea\xa2\xcf\xa0\xfb\x18\x1b\x0a\xef\x53\x63\x46\xcf\x8a\x8c\x5e\x27\xbe\x6a\xc9\x15\x98\xaa\xa9\xde\xbe\x9d\xe8\x9c\x93\x7b\x30\x86\x01\xcc\x60\x97\xf7\xdf\x8c\x60\xd6\x89\x61\x37\x99\xe8\xee\x40\x81\xd9\x80\xea\x3d\x8e\x31\xc3\xd5\x7b\x9c\xeb\x2d\xae\x67\xaa\xf7\xb4\xa4\xe0\x4c\xde\x47\xb3\xe0\xb4\xa0\x9f\x1a\x5d\xb5\xda\x6d\x43\xd9\x38\x4f\x98\xd1\xe5\x7d\x14\xfa\x14\xfa\x59\x7f\xb5\xee\xfb\x13\xc8\xf9\xe4\x1c\xe6\x5c\x91\xf7\xcd\x6d\xd6\xee\xab\x7a\xfb\xd4\x9d\x8e\x3b\x99\x8e\x59\x60\x47\x3b\x83\x2d\x55\xe6\xba\xe4\xed\x7a\x5a\x66\xa4\xaa\xdc\x4f\xe5\x44\x77\xbf\x17\xf5\x5b\xf2\xbc\xdd\xa7\x32\x8a\xb2\x6e\xbb\xf0\x19\x2e\x78\xf3\x38\x5f\x77\x33\xf5\xaf\xff\x7b\x8e\x29\x7f\x02\xdd\xab\x96\xd6\xd4\xc1\x75\xd3\xe8\xe8\xa0\xd5\xed\x82\xa5\x30\xad\x14\x51\x8b\x20\x4f\x1a\xa1\x00\x7b\x3b\x26\x16\x1f\xc8\x04\x0b\xb2\x71\xd3\xd4\xa1\x30\x5f\x52\xec\x97\x8e\xc5\x31\xfe\xeb\x56\x21\xbf\xf4\x10\xc3\xf7\x07\x7c\x70\x02\x03\xe6\x35\xa6\x7a\xbc\x34\x04\x72\x49\x8d\x00\x46\x79\x2a\x57\xa2\x31\xdb\xcc\xbc\xe2\x21\x97\xf8\xbe\xd0\xf4\x44\xa7\x4c\x62\x0d\x25\xbe\x65\xf9\xb8\x7b\x57\xbf\xf0\xf8\x4a\x98\xf6\x59\x4a\x1a\x1c\x8d\x26\xa0\x5a\x19\x4d\x80\x54\xf9\x3c\x97\x3a\xa8\x56\x0e\x41\xfd\xf3\x21\x90\x4b\x47\x22\x7c\x4e\xb3\x18\xb5\xd7\x2c\x86\x2c\x57\xce\x8e\x2a\x6f\x3e\xf1\xda\xf5\x20\xf3\x7d\xfb\xa4\xb5\xc7\xa7\xab\xa7\x96\xef\x4b\xdc\xbf\xcc\xb1\xa3\xfa\x86\x9c\x43\xf5\xf3\xb6\xd3\x1d\x0b\x79\x56\x8e\x65\x20\x81\xb7\xe2\xc5\x8c\x19\xa3\x41\xc9\xf2\x68\x84\xa5\x35\xc9\xcc\xf5\x49\xca\x19\xa0\xea\x9f\x9b\xb5\x56\xe7\x1d\x89\xb9\xb9\xcd\xb9\xf8\x54\x72\xe7\x4c\xb4\x30\x8b\x14\xae\xc9\x38\xbf\xc9\x24\x8d\x07\x6a\xc5\xa2\x23\x84\x37\x64\x15\x17\x3a\x18\xed\x36\x4b\xd7\x4d\x8a\xa5\x89\x2a\xcf\x67\xef\x7e\x22\xcd\x2b\x4c\xd5\xe5\x47\x79\x2f\x38\x3d\xde\x98\xcd\x53\xb8\x0e\x9c\x06\xc4\x09\xe3\x9f\x3e\x52\xa8\x6d\x3a\xd3\x16\xb4\x5a\xc3\xa8\x35\x31\xe7\x6f\x39\x27\x03\xaf\x13\x52\xa9\xbe\x0d\x4f\x23\x40\xd6\xe6\xe4\x76\xca\x4b\x2c\x49\xdb\x74\x34\x7b\x76\xf6\xb9\x26\xca\xc9\xbe\x23\xe3\xb0\xd0\xeb\x50\xdd\x30\x04\x45\x70\x22\x0e\x76\x60\x87\x9d\x88\xf4\x57\x40\xf4\x9d\x8f\x0c\x2c\x58\x20\x16\xad\xad\x5b\xd6\x27\x8f\x44\x4c\xca\x1f\x8d\x92\x58\x3a\x12\x12\x05\x98\x9f\x41\x02\x1b\xee\xf6\x80\xcd\x8a\xaa\xde\x66\xc8\x6d\x4f\x2a\x0b\x04\x8a\x70\x27\x38\x91\x68\xb7\x3a\x95\xb3\x5d\x0e\x25\x44\x07\x39\x5b\xa8\x6f\xeb\x72\xb1\xc5\x21\xbf\x36\x10\x78\x39\xd0\xdc\x74\x64\x20\xbe\xf9\xb3\xf3\x71\xea\x91\xb5\x99\xca\xa9\xb1\x5f\x69\xe1\xa8\x29\xa2\x85\xc5\x70\xae\xce\x09\x9c\xb3\xb8\xc4\xaf\x84\x8d\x56\x12\x0c\x1e\x45\x8c\x04\xce\xc6\xd0\xe1\xc5\xe7\xca\x51\x49\xb8\x4c\xbf\x79\xf1\x5b\x00\xdc\xfa\xaa\x2b\xb1\xaa\xa2\xbc\xc4\xaa\xbf\xc9\xd5\x4a\xad\x7a\xfa\xc6\x05\xf3\x2d\x01\x8d\x38\x82\x5e\xa0\xab\x35\x31\xcf\xe2\xf9\xd8\x96\xb8\x68\xcd\x4e\x69\xb6\x1f\x12\x37\x0f\x37\xf5\x9f\x49\x24\xb0\xf1\xa4\x01\xea\xf5\xfa\xee\xee\x5f\x8f\x45\xe1\x06\x44\x6c\xde\x0d\xde\xdf\xd8\xf7\x2f\x08\xd1\x5e\xe4\xad\x79\xb2\xe0\xfd\x11\xda\xeb\xd9\xaa\xbc\x69\x99\x5c\x1f\xa1\x6d\xdd\x6c\xcc\x00\xc3\x81\x5d\x11\x4e\xb1\x9d\xf1\xf2\xb6\xf0\xeb\x97\xc7\x58\x73\xd8\x3b\x7e\x8b\xbf\xfe\x9d\xa0\xe8\x4f\x1f\xdb\x04\x81\xc8\x0a\x31\x0e\x00\x0a\x6c\x70\x30\xb7\x0f\x53\x8f\xf9\xe6\x6b\xf9\x39\x53\xf0\xae\x74\xc0\x7a\xe3\xae\x6e\xf0\x04\x8a\x82\x1d\xc8\x19\xbc\xf2\x80\x78\xeb\xf0\xfc\x41\xfc\xeb\x6b\x79\xe9\x71\xef\xa7\xa7\xf2\x27\xfe\xdd\xd5\xb5\x76\x07\xf4\xae\xae\xf3\xd2\x4f\xe5\xe7\xb9\x36\x82\x27\xc4\x4b\x91\x47\x6c\x2c\x31\x2a\xda\x10\x49\x09\x36\x1f\x09\x93\x50\x40\xfc\xa9\x7b\x5e\xab\xcb\xa5\xcf\x0b\xb9\x18\x8e\x5e\xc1\xd3\xc9\xef\x6d\xbb\x9a\xe2\x92\xde\xf4\x29\x5a\x7f\x02\xe7\x38\xc0\x21\x62\xd8\x06\x66\x0a\x9a\x01\xf1\x49\xc4\x10\xa0\x01\x50\x64\x45\x96\xea\x52\x85\x2f\x4b\x0d\xa5\xde\xa8\xd5\x66\x4d\x74\x62\xe1\x20\xc2\x36\x88\x03\x1b\x87\xe0\x2c\xc4\xf8\xb4\xdb\x9e\x15\x97\x66\xd5\xba\x18\xe7\x4f\xfc\x37\xca\x65\x34\x95\x5b\x0a\x30\x2b\x7b\x45\x3d\xf0\x40\x43\xe0\xd3\x10\x03\x12\x3c\xd0\x97\x56\x49\x43\xd4\xe8\x10\xb0\x06\xf8\xd3\x8a\xa2\x59\xe1\xac\xfa\xdb\x06\x0d\x3e\x95\x97\xcd\xf6\x69\xd1\x23\xbb\x4b\x5c\x6e\xf7\xe2\xc8\x57\x3f\xfe\x22\xd1\x8b\x99\xca\x3f\x67\xa8\x7b\xc4\xe9\x43\x88\x7c\x1c\x81\x4d\x18\x95\x7f\x5f\x33\xad\x66\x62\x44\x33\xb8\x7f\x20\x0b\xe6\x2f\x58\x33\xdf\xc5\xb5\x9f\x57\x4a\xf2\xf4\xcf\x7b\x94\x91\x14\x31\xa1\xac\x57\x68\x5d\x8b\x65\xba\x58\xb4\xec\xff\x5b\x74\xbd\x42\xbb\x5a\x74\x76\xb5\x40\xc0\x5f\xcb\xaf\xaf\x30\x7d\x35\xa9\x9d\x7e\x2b\x2c\xff\xd5\x26\x63\x60\x79\x28\x8a\x4e\xf6\x56\x5e\x86\x98\x7f\x01\x68\xa5\xde\xde\x22\x4d\xaf\x56\x98\x3d\x2a\xbd\x54\x31\xaf\x3c\x3c\xfa\xd6\x8c\xd9\x10\x07\x8c\x58\xf9\x94\xfd\x5a\x1e\x1e\x89\xea\x29\xdf\x84\x6f\x16\x0d\x95\xa5\xde\xcb\x36\x19\x6f\x55\x88\xd3\x9c\x40\x9b\xf9\xb7\x9a\xb8\x69\xf2\x77\x9a\x36\x89\x9f\xfb\xb9\x70\x59\xd8\x35\xbf\x7e\xa0\x94\xe1\x70\xfe\xdd\x27\x2b\x24\x23\xb6\xd8\x79\xb9\x0c\x34\xa3\xdb\xb9\xe9\x81\xcb\x2e\xb8\xe8\xdc\x74\x96\xde\x3e\x2a\x97\x17\x4f\x4d\x2e\xbb\x0b\xb7\x2d\x1a\x44\x0c\xcc\xd6\xef\xbf\xf9\xfa\x7d\x02\x6c\x6a\xc5\x3e\x0e\x58\xe9\x3f\x31\x0e\xd3\x2e\xf6\xb0\xc5\x68\x78\xb0\xbf\xb0\xce\xef\x2f\xc1\xa8\x90\x94\xe7\x32\xb7\x89\x79\x49\x78\x8a\x65\x14\x21\xcc\xdf\x79\x08\xf3\xf7\xeb\x21\xce\x06\x81\xe2\xa0\x67\xe5\x8d\xae\xf9\x61\x96\x90\x6d\x77\xc6\x38\x60\x3a\x89\x18\x5f\x3d\x0f\xf6\x2d\x8f\x58\x8f\xfb\x87\xe0\xe0\x23\x38\xf9\x26\x98\x90\x62\xbd\x4a\x39\x3e\xb8\x94\x12\xa3\x8e\xe3\xe1\x83\xfd\x69\xb0\xb5\xff\x71\x71\x56\x2d\xab\xf3\x62\xab\x7f\x42\x97\x10\xfb\x74\xbc\x51\x97\x57\x24\xce\xe3\xea\x6b\x79\x1e\x76\x5f\xcb\xc5\x5b\x8d\x4f\x4f\x00\x07\x36\x78\x7e\xfe\xdf\x00\x00\x00\xff\xff\x2c\x0a\x6b\x7d\x07\x39\x00\x00")

func pkgAuthHtmlDefaultViewsBaseTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultViewsBaseTmpl,
		"pkg/auth/html/default/views/base.tmpl",
	)
}

func pkgAuthHtmlDefaultViewsBaseTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultViewsBaseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/views/base.tmpl", size: 14599, mode: os.FileMode(438), modTime: time.Unix(1601860894, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultViewsLoginTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\xc1\x8e\x9b\x40\x0c\xbd\xf3\x15\xd6\xdc\x43\xa4\x3d\xec\xa1\x02\x7a\xd8\xaa\xd2\x4a\xab\x76\x95\xb4\xe7\x68\xc2\x38\x30\x2a\x8c\xd1\x8c\x49\x37\x1a\xf1\xef\xd5\x90\x10\x42\x4a\xda\xb4\x7b\x4b\xf0\xf3\xf3\xf3\xc3\x36\xde\x33\xd6\x4d\x25\x19\x41\x6c\xa5\x43\x01\x71\xd7\x45\x91\xf7\x0a\x77\xda\x20\x08\x99\xb3\x26\x23\xba\xee\x85\x0a\x6d\xbc\x47\xa3\xa6\x80\x2d\xa9\x83\xe8\xba\x08\x00\x20\x29\x1f\x20\xaf\xa4\x73\xa9\xd8\x91\xad\x17\x25\x4a\x85\x56\x64\x7d\x6e\xb2\x2c\x1f\xb2\x23\x4c\xe9\xfd\x04\xa7\xf4\x5e\xbb\x50\x26\x4b\x96\x4a\xef\x4f\xa8\x10\x82\x1a\xb9\x24\x95\x8a\x86\x1c\x8b\x63\x60\x96\x22\x27\xc3\x96\xaa\x0b\x48\x0f\xd3\xa6\x69\x19\xf8\xd0\x60\x2a\x18\xdf\x58\x4c\x92\xfa\xa8\x80\xa6\x92\x39\x96\x54\x29\xb4\xa9\xf8\x76\x68\x10\x0e\xd4\x5a\xc0\x5a\xea\x4a\x80\x91\x35\xa6\xa2\x75\x68\xc3\xaf\x4b\x0d\xa3\xd6\xff\x95\xd4\x48\xe7\x7e\x92\x55\xff\x22\x6b\xcc\x39\x2a\x3b\xff\xbf\x57\x59\x41\xbc\x98\x49\xea\x91\x12\x4a\x8b\xbb\x54\x78\x1f\xaf\xa8\x65\xb4\xf1\x1a\x5d\x78\x35\x6b\x96\x8c\xaf\x92\xcb\xae\x13\xd9\xe7\x9e\x64\x2a\xe7\x63\xb2\x94\xbf\x29\x88\x66\xbb\x2e\xb5\x52\x68\x06\xfd\x16\x5d\x43\xc6\xe1\x26\x04\x05\xec\x65\xd5\x62\x2a\x72\x52\x13\xaf\x6f\xe7\xe7\x95\x46\xc3\x1b\xad\xce\xb9\xde\xc7\xaf\xd2\xca\xda\xc5\x4f\x7d\xec\xf9\x53\x10\x7d\x9f\x16\xa5\x2d\xe6\xbc\x69\xad\x9e\xa1\x5b\x9d\xc2\xdf\x57\xcf\xf7\x32\xba\x9c\x2e\xba\x1a\xa9\xd6\xe1\xf9\xdd\x24\xc1\xfc\x39\x92\xf0\xbc\x27\x79\xd7\x14\xba\x76\x5b\xeb\x71\x35\xb6\x6c\xce\xb5\x9e\xc8\xb0\x36\xed\x8d\xb1\x4f\x96\xa1\xc4\x5f\x97\x7a\x4c\x2d\x1f\xb3\xaf\x16\x9c\x2e\x0c\xb4\x0d\xb4\x4e\x9b\x22\x59\x96\x8f\x03\xdb\x38\x33\x97\x6c\x8d\xa5\xbd\x56\x68\xdd\x62\x4b\x6f\x17\x6c\xde\x5b\x69\x0a\x84\xf8\x75\x00\x9c\xce\xd0\x9c\x17\x03\xc9\x95\x0f\xd7\x43\xff\xa2\xcd\x8f\xc9\x5b\xb9\xc5\xe7\x7d\xfc\x45\xd6\xd8\x75\x8b\x91\xf9\x6a\xed\x46\xc3\xe4\x95\xf9\x53\xdc\x70\x54\xff\xe4\xc1\xbb\x1c\xbd\x6e\x72\xba\xd9\x2b\x2c\xb4\x63\xb4\xa7\xe5\x06\xc7\x87\xea\x74\x2d\x17\x0a\x73\xb2\x32\x7c\x01\x3e\x80\x21\x83\x77\x5c\x60\x08\xe3\x33\xed\x77\xa8\x30\x3f\x42\x32\x8b\xa2\xf0\x41\x39\x9a\xf0\x2b\x00\x00\xff\xff\x9e\xe6\x9c\xb8\x91\x06\x00\x00")

func pkgAuthHtmlDefaultViewsLoginTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultViewsLoginTmpl,
		"pkg/auth/html/default/views/login.tmpl",
	)
}

func pkgAuthHtmlDefaultViewsLoginTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultViewsLoginTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/views/login.tmpl", size: 1681, mode: os.FileMode(438), modTime: time.Unix(1601593053, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultViewsMessageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\x31\x6f\xb3\x30\x10\x86\x77\x7e\xc5\xc9\xd3\xf7\x0d\x09\x52\x86\x0c\x15\x41\xca\xd4\x2e\x95\xb2\x76\x3c\xec\x23\x58\x31\x76\xeb\x33\xb4\xc8\xe2\xbf\x57\x10\x4a\x52\x35\x49\x5b\x75\x3c\x78\xee\xd1\xcb\x7b\xc4\x18\xa8\x7e\x36\x18\x08\x44\x81\x4c\x02\x96\x7d\x9f\x24\x31\x2a\x2a\xb5\x25\x10\x28\x83\x76\x56\xf4\xfd\x23\x31\xe3\x9e\x62\x24\xab\xbe\x22\x2d\x4e\xd8\xd6\xc2\x69\x06\xa3\xed\x01\x2a\x64\x28\x88\x2c\x30\xd9\x00\xc1\x41\xe7\x1a\x0f\x54\xa3\x36\x80\x52\xba\xc6\x86\x0b\x56\x4f\xd2\xb5\xe4\xbb\xc1\x09\x1f\xc3\x5f\x84\x53\x2c\x52\xa2\xef\x9f\x86\x85\x09\x9d\x74\xda\xee\x61\x46\xae\xe7\x19\xd7\x77\xc8\xfc\xea\xbc\x02\x4f\x4c\x01\xb8\x91\x92\x98\xcb\xc6\x98\xee\xc2\x66\xe1\xd4\xf0\x15\x09\x00\x40\x56\xad\xf2\xa9\xc9\x2c\xad\x56\xf9\xf8\x30\x46\x5d\xc2\x3f\x7a\x81\xe5\x0e\x3d\xd6\xbc\xdc\x8e\xa5\x7f\x6a\xf6\xff\x24\x38\xf2\xa7\xa3\x9d\x21\xe3\xe9\x8e\xef\xc9\x30\xc1\x6d\x29\xa9\xef\x9c\xa4\x7e\xaa\x9c\x6f\x75\xcd\x38\x03\xbf\x13\xde\xc8\x78\x22\xce\x95\x63\xf5\x63\xcf\x4a\xb7\x20\x0d\x32\x6f\x44\xe9\x7c\xbd\x50\xba\xd5\x3c\xb4\x94\xcf\xba\xac\x5a\xe7\xf7\x0e\x0a\x94\x87\xe1\x27\xca\x10\x2a\x4f\xe5\x46\xa4\x02\x38\x74\x86\x36\x22\xd0\x5b\x58\x28\x92\xce\x8f\x0d\xdf\x81\x75\x96\x44\xfe\xe0\x6a\xca\x52\xcc\xb3\xb4\x5a\x1f\x75\x59\xaa\x74\x9b\x27\x53\x82\xf7\x00\x00\x00\xff\xff\x1e\xfa\xf6\x9f\x55\x03\x00\x00")

func pkgAuthHtmlDefaultViewsMessageTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultViewsMessageTmpl,
		"pkg/auth/html/default/views/message.tmpl",
	)
}

func pkgAuthHtmlDefaultViewsMessageTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultViewsMessageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/views/message.tmpl", size: 853, mode: os.FileMode(438), modTime: time.Unix(1600402845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultViewsRecoveryTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\xbf\x6e\xb3\x30\x10\xdf\x79\x8a\xd3\xed\xf9\x90\x32\x64\xf8\x04\x2c\x19\xda\x39\xea\x0b\x1c\xf8\x22\x5b\x35\x3e\x64\x1f\xb4\x08\xf1\xee\x15\x21\x6d\x82\x1a\xa9\x95\xba\xd9\xba\xdf\x5f\xfb\xa6\x49\xb9\xed\x3c\x29\x03\xd6\x94\x18\xe1\xdf\x3c\x67\xd9\x34\x19\x3e\xbb\xc0\x80\xd4\xa8\x93\x80\xf3\x7c\xe2\x46\x06\x8e\xe3\x34\x71\x30\x5b\x4c\x2d\x66\xc4\x79\xce\x00\x00\x0a\xbb\x87\xc6\x53\x4a\x25\x9e\x25\xb6\x3b\xcb\x64\x38\x62\x75\xe2\xc4\x0a\xc7\xc8\x86\x83\x3a\xf2\xa9\xc8\xed\xbe\x5a\x29\xc6\x0d\x1b\x8e\x71\x83\x4b\x8b\x6b\x55\xe4\xc6\x0d\x57\xd4\x32\x82\x96\xd5\x8a\x29\xb1\x93\xa4\xb8\x0e\x1e\x4a\x34\x12\x34\x8a\xbf\x83\x5c\x60\x2e\x74\xbd\x82\x8e\x1d\x97\xd8\x51\x4a\x6f\x12\x0d\x42\xa0\x76\x73\xef\x3c\x35\x6c\xc5\x1b\x8e\x25\xbe\x8c\x1d\xc3\x28\x7d\x84\x1b\xe0\xde\xe9\x22\x79\x1f\x65\x8d\xfc\xa7\x68\xa9\xaf\x5b\xa7\x5f\x3e\xb5\x06\x84\x81\x7c\xcf\x25\x1e\x25\xa8\x0b\x3d\x7f\x77\x5c\x8f\x8b\xc5\x8f\xcf\x7a\xa3\xda\x43\xf5\x24\x50\x53\xf3\x0a\x56\x5a\x2e\x72\x7b\xf8\x54\xba\x89\x12\xd8\xc8\xe7\x12\x73\x84\xa4\xa3\xe7\x12\x95\xdf\x75\x67\xb8\x91\x48\xcb\x7a\xfc\x87\x20\x81\x7f\xf1\x1f\xb0\x54\xd9\x16\x7f\x96\x96\x1f\x57\xa1\x2a\xbb\x2e\xdb\x47\x00\x00\x00\xff\xff\x38\xbc\x8b\x6d\xa6\x02\x00\x00")

func pkgAuthHtmlDefaultViewsRecoveryTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultViewsRecoveryTmpl,
		"pkg/auth/html/default/views/recovery.tmpl",
	)
}

func pkgAuthHtmlDefaultViewsRecoveryTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultViewsRecoveryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/views/recovery.tmpl", size: 678, mode: os.FileMode(438), modTime: time.Unix(1600402845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultViewsRegisterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xcf\x8a\xdb\x30\x10\xc6\xef\x79\x8a\x61\xee\x9b\xc0\x1e\xf6\x50\x6c\x97\xa5\xd7\x42\xcb\xd2\x17\x98\x58\x93\x95\x40\xd6\x18\x69\xe4\xd6\x15\x7a\xf7\xe2\x5d\xa7\x4e\x20\xa5\xa1\x3d\x9a\xf9\xf4\x7d\xbf\xf9\xe3\x52\x94\x87\xd1\x93\x32\xe0\x91\x12\x23\xec\x6b\xdd\xed\x4a\x31\x7c\x72\x81\x01\xa9\x57\x27\x01\x6b\x7d\xe1\x57\x97\x94\x63\x29\x1c\xcc\xb5\xe6\x28\x66\xc6\x5a\x77\x00\x00\x8d\x7d\x84\xde\x53\x4a\x2d\x9e\x24\x0e\x0f\x96\xc9\x70\xc4\xee\xfc\xbc\x39\xd8\xc7\xee\x5d\x69\xdc\x74\x25\x35\x6e\x72\x69\x09\xeb\x9a\x83\x71\xd3\xaa\x5a\x4a\x30\xb0\x5a\x31\x2d\x8e\x92\x14\xdf\x0b\x37\x2d\x7a\x09\x1a\xc5\x5f\x48\xde\x64\x2e\x8c\x59\x41\xe7\x91\x5b\x54\xfe\xa1\x08\x81\x06\x6e\x91\x07\x72\x1e\x61\xf4\xd4\xb3\x15\x6f\x38\xb6\xf8\x6d\x1e\x19\x66\xc9\x11\xd6\xea\xa5\xff\x9b\xd1\x25\xc0\x06\xfa\xaf\x3c\x23\xa5\xf4\x5d\xa2\x39\x33\x6d\xdf\x7f\xc0\xda\x04\x77\x90\xfd\x17\x5a\xca\xc7\xc1\xe9\xef\x9c\xa3\x06\x84\x89\x7c\xe6\x16\x3f\x49\x50\x17\x32\xdf\x9e\x45\x73\x58\x22\xfe\xba\xe6\xed\xa9\x7d\xea\x9e\x7d\x64\x32\x33\x58\x9a\x18\x28\x00\xf5\xbd\xe4\xa0\x1f\x9b\x83\x7d\x3a\xbb\x6e\x01\x04\x36\xf2\xa9\xc5\x52\xf6\x2f\x92\x95\xe3\xfe\x0b\x65\xb5\xcf\x59\xad\x44\xf7\x93\xbf\x92\xda\x5a\x11\x92\xce\x7e\x5d\xfa\x83\xe1\x5e\x22\x2d\xe7\xfc\x01\x82\x04\xbe\xe3\x90\x60\xe9\xf9\x7a\x42\x9f\xe5\xd5\x85\xdb\x4d\x53\xb7\x5b\xff\x8e\x5f\x01\x00\x00\xff\xff\x2d\xb0\x84\x0f\x57\x03\x00\x00")

func pkgAuthHtmlDefaultViewsRegisterTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultViewsRegisterTmpl,
		"pkg/auth/html/default/views/register.tmpl",
	)
}

func pkgAuthHtmlDefaultViewsRegisterTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultViewsRegisterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/views/register.tmpl", size: 855, mode: os.FileMode(438), modTime: time.Unix(1601592990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultViewsStateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xc1\x8a\xdb\x30\x10\x86\xef\x7e\x8a\x61\xee\x9b\xc0\x1e\xf6\x50\x62\xc3\xd2\x43\x2f\x85\x2e\xa5\x2f\x30\xb6\x26\x95\xa8\xac\x31\xd2\x28\xd4\x15\x7a\xf7\xe2\xd8\x69\x12\x36\x94\xd2\x9b\x60\x66\xbe\x7f\xfe\x7f\x54\x8a\xf2\x38\x79\x52\x06\xec\x29\x31\xc2\xae\xd6\xa6\x29\xc5\xf0\xd1\x05\x06\xa4\x41\x9d\x04\xac\xf5\xf5\xfc\x28\x85\x83\xb9\xef\xe8\xc5\xcc\x58\x6b\x03\x00\x70\xb0\xcf\x30\x78\x4a\xa9\xc5\xa3\xc4\xf1\xc9\x32\x19\x8e\xd8\x95\xb2\x7b\xa3\x48\x63\xda\xad\x98\x5a\x0f\x7b\xfb\xdc\xad\x33\xc6\x9d\xee\x86\x8c\x3b\xb9\xb4\x88\x76\x87\xbd\x71\xa7\xad\x6b\x29\xc1\xc8\x6a\xc5\xb4\x38\x49\x52\x5c\x0b\x0f\x11\x83\x04\x8d\xe2\x6f\x5a\xce\x6d\x2e\x4c\x59\x41\xe7\x89\x5b\x54\xfe\xa9\x08\x81\x46\x6e\x91\x47\x72\x1e\x61\xf2\x34\xb0\x15\x6f\x38\xb6\xf8\x6d\x9e\x18\x66\xc9\x11\xb6\xea\x2d\xff\x0c\x42\x38\x91\xcf\xdc\xe2\xed\x26\xeb\xc6\xcd\x43\x49\xeb\x8c\xe1\x70\x11\xdd\x92\xbd\x40\xde\x47\x84\xfb\x5b\xd0\x7f\x58\x4c\xb9\x1f\x9d\xfe\xd9\xbc\xd7\xab\xda\x47\x09\xea\x42\xe6\xf7\xab\xaf\xcf\x45\x62\x53\xff\xcb\x7d\xae\xb3\xf6\xa5\xfb\x24\xd0\xd3\xf0\x03\x54\x0e\x7b\xfb\x72\x01\x5d\x99\x04\x36\xf2\xf1\x6c\xf4\xab\x64\xe5\xb8\xfb\x42\x59\xed\x6b\x56\x2b\xd1\xfd\xe2\x37\x52\x5b\x2b\x42\xd2\xd9\x6f\xf7\x79\x32\x3c\x48\xa4\x25\x8e\x0f\x10\x24\xf0\x3f\xdc\x1c\x16\x9b\xf7\xa1\x7c\x96\xef\x2e\x3c\xf6\x49\x5d\xb3\x7d\xe9\xdf\x01\x00\x00\xff\xff\xf8\xb4\xff\x92\x0a\x03\x00\x00")

func pkgAuthHtmlDefaultViewsStateTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultViewsStateTmpl,
		"pkg/auth/html/default/views/state.tmpl",
	)
}

func pkgAuthHtmlDefaultViewsStateTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultViewsStateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/views/state.tmpl", size: 778, mode: os.FileMode(438), modTime: time.Unix(1601592990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"pkg/auth/html/basic/mail/activation.tmpl":   pkgAuthHtmlBasicMailActivationTmpl,
	"pkg/auth/html/basic/mail/base.tmpl":         pkgAuthHtmlBasicMailBaseTmpl,
	"pkg/auth/html/basic/mail/recovery.tmpl":     pkgAuthHtmlBasicMailRecoveryTmpl,
	"pkg/auth/html/basic/views/base.tmpl":        pkgAuthHtmlBasicViewsBaseTmpl,
	"pkg/auth/html/basic/views/login.tmpl":       pkgAuthHtmlBasicViewsLoginTmpl,
	"pkg/auth/html/basic/views/message.tmpl":     pkgAuthHtmlBasicViewsMessageTmpl,
	"pkg/auth/html/basic/views/recovery.tmpl":    pkgAuthHtmlBasicViewsRecoveryTmpl,
	"pkg/auth/html/basic/views/register.tmpl":    pkgAuthHtmlBasicViewsRegisterTmpl,
	"pkg/auth/html/basic/views/state.tmpl":       pkgAuthHtmlBasicViewsStateTmpl,
	"pkg/auth/html/default/mail/activation.tmpl": pkgAuthHtmlDefaultMailActivationTmpl,
	"pkg/auth/html/default/mail/base.tmpl":       pkgAuthHtmlDefaultMailBaseTmpl,
	"pkg/auth/html/default/mail/recovery.tmpl":   pkgAuthHtmlDefaultMailRecoveryTmpl,
	"pkg/auth/html/default/views/base.tmpl":      pkgAuthHtmlDefaultViewsBaseTmpl,
	"pkg/auth/html/default/views/login.tmpl":     pkgAuthHtmlDefaultViewsLoginTmpl,
	"pkg/auth/html/default/views/message.tmpl":   pkgAuthHtmlDefaultViewsMessageTmpl,
	"pkg/auth/html/default/views/recovery.tmpl":  pkgAuthHtmlDefaultViewsRecoveryTmpl,
	"pkg/auth/html/default/views/register.tmpl":  pkgAuthHtmlDefaultViewsRegisterTmpl,
	"pkg/auth/html/default/views/state.tmpl":     pkgAuthHtmlDefaultViewsStateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"pkg": &bintree{nil, map[string]*bintree{
		"auth": &bintree{nil, map[string]*bintree{
			"html": &bintree{nil, map[string]*bintree{
				"basic": &bintree{nil, map[string]*bintree{
					"mail": &bintree{nil, map[string]*bintree{
						"activation.tmpl": &bintree{pkgAuthHtmlBasicMailActivationTmpl, map[string]*bintree{}},
						"base.tmpl":       &bintree{pkgAuthHtmlBasicMailBaseTmpl, map[string]*bintree{}},
						"recovery.tmpl":   &bintree{pkgAuthHtmlBasicMailRecoveryTmpl, map[string]*bintree{}},
					}},
					"views": &bintree{nil, map[string]*bintree{
						"base.tmpl":     &bintree{pkgAuthHtmlBasicViewsBaseTmpl, map[string]*bintree{}},
						"login.tmpl":    &bintree{pkgAuthHtmlBasicViewsLoginTmpl, map[string]*bintree{}},
						"message.tmpl":  &bintree{pkgAuthHtmlBasicViewsMessageTmpl, map[string]*bintree{}},
						"recovery.tmpl": &bintree{pkgAuthHtmlBasicViewsRecoveryTmpl, map[string]*bintree{}},
						"register.tmpl": &bintree{pkgAuthHtmlBasicViewsRegisterTmpl, map[string]*bintree{}},
						"state.tmpl":    &bintree{pkgAuthHtmlBasicViewsStateTmpl, map[string]*bintree{}},
					}},
				}},
				"default": &bintree{nil, map[string]*bintree{
					"mail": &bintree{nil, map[string]*bintree{
						"activation.tmpl": &bintree{pkgAuthHtmlDefaultMailActivationTmpl, map[string]*bintree{}},
						"base.tmpl":       &bintree{pkgAuthHtmlDefaultMailBaseTmpl, map[string]*bintree{}},
						"recovery.tmpl":   &bintree{pkgAuthHtmlDefaultMailRecoveryTmpl, map[string]*bintree{}},
					}},
					"views": &bintree{nil, map[string]*bintree{
						"base.tmpl":     &bintree{pkgAuthHtmlDefaultViewsBaseTmpl, map[string]*bintree{}},
						"login.tmpl":    &bintree{pkgAuthHtmlDefaultViewsLoginTmpl, map[string]*bintree{}},
						"message.tmpl":  &bintree{pkgAuthHtmlDefaultViewsMessageTmpl, map[string]*bintree{}},
						"recovery.tmpl": &bintree{pkgAuthHtmlDefaultViewsRecoveryTmpl, map[string]*bintree{}},
						"register.tmpl": &bintree{pkgAuthHtmlDefaultViewsRegisterTmpl, map[string]*bintree{}},
						"state.tmpl":    &bintree{pkgAuthHtmlDefaultViewsStateTmpl, map[string]*bintree{}},
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
