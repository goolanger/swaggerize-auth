// Code generated by go-bindata. (@generated) DO NOT EDIT.

 //Package auth generated by go-bindata.// sources:
// pkg/auth/html/basic/mail/activation.tmpl
// pkg/auth/html/basic/mail/base.tmpl
// pkg/auth/html/basic/mail/recovery.tmpl
// pkg/auth/html/basic/views/base.tmpl
// pkg/auth/html/basic/views/login.tmpl
// pkg/auth/html/basic/views/message.tmpl
// pkg/auth/html/basic/views/recovery.tmpl
// pkg/auth/html/basic/views/register.tmpl
// pkg/auth/html/basic/views/state.tmpl
// pkg/auth/html/default/mail/activation.tmpl
// pkg/auth/html/default/mail/base.tmpl
// pkg/auth/html/default/mail/recovery.tmpl
// pkg/auth/html/default/views/base.tmpl
// pkg/auth/html/default/views/login.tmpl
// pkg/auth/html/default/views/message.tmpl
// pkg/auth/html/default/views/recovery.tmpl
// pkg/auth/html/default/views/register.tmpl
// pkg/auth/html/default/views/state.tmpl
package auth

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _pkgAuthHtmlBasicMailActivationTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xca\x4f\xa9\x54\xaa\xad\xe5\x52\x50\x50\x50\x70\x4c\x2e\xc9\x2c\x4b\x2c\x49\x55\xa8\xcc\x2f\x2d\x52\x48\x4c\x4e\xce\x2f\xcd\x2b\xb1\x02\x4b\xd9\x24\x2a\x64\x14\xa5\xa6\xd9\x2a\x55\x57\xeb\xf9\x64\xe6\x65\xd7\xd6\x2a\xd9\x41\x95\x67\xe6\xe7\x29\x80\x84\x6c\xf4\x13\xed\xb8\xaa\xab\x53\xf3\x52\x6a\x6b\x01\x01\x00\x00\xff\xff\x81\x76\x50\xac\x60\x00\x00\x00")

func pkgAuthHtmlBasicMailActivationTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicMailActivationTmpl,
		"pkg/auth/html/basic/mail/activation.tmpl",
	)
}

func pkgAuthHtmlBasicMailActivationTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicMailActivationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/mail/activation.tmpl", size: 96, mode: os.FileMode(438), modTime: time.Unix(1601585518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicMailBaseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\x3d\x6b\xc4\x30\x0c\x86\x77\xff\x0a\xd5\x73\x13\xd3\xad\x83\x6d\x28\xfd\x18\xdb\x0e\xe9\xd0\x51\x67\x0b\x62\xb0\x1d\x93\x88\x84\xc3\xf8\xbf\x1f\xb9\x70\xdc\x4d\x42\xcf\x23\xc4\xfb\xea\xa7\x8f\x9f\xf7\xe1\xff\xf7\x13\x46\x4e\xd1\x0a\x7d\x1b\x84\xde\x0a\x00\x00\x9d\x88\x11\xdc\x88\xf3\x42\x6c\xe4\xdf\xf0\xd5\xbd\x4a\x50\x8f\x32\x63\x22\x23\xd7\x40\x5b\x99\x66\x96\xe0\xa6\xcc\x94\xd9\xc8\x2d\x78\x1e\x8d\xa7\x35\x38\xea\xae\xcb\x33\x84\x1c\x38\x60\xec\x16\x87\x91\xcc\xcb\xfd\x15\x07\x8e\x64\x6b\xed\xdf\x4a\xf9\xc6\x44\xad\x69\x75\x30\xa1\xd5\x91\x47\x9f\x26\x7f\xb6\xa2\x56\xa6\x54\x22\x32\x81\xdc\x89\x84\xbe\x35\xa1\xd5\x61\xf7\xeb\xbd\xc4\x25\x00\x00\xff\xff\xe6\x75\x55\x19\xdb\x00\x00\x00")

func pkgAuthHtmlBasicMailBaseTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicMailBaseTmpl,
		"pkg/auth/html/basic/mail/base.tmpl",
	)
}

func pkgAuthHtmlBasicMailBaseTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicMailBaseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/mail/base.tmpl", size: 219, mode: os.FileMode(438), modTime: time.Unix(1601591825, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicMailRecoveryTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xca\x4f\xa9\x54\xaa\xad\xe5\x52\x50\x50\x50\x70\x2e\x4a\x4d\x49\xcd\x2b\xc9\x4c\xcc\x29\x56\x28\x4a\x4d\xce\x2f\x4b\x2d\xaa\x54\xc8\xc9\xcc\xcb\xb6\x02\x4b\xdb\x24\x2a\x64\x14\xa5\xa6\xd9\x2a\x55\x57\xeb\xf9\x64\xe6\x65\xd7\xd6\x2a\xd9\x05\xc1\x94\x81\x04\x6c\xf4\x13\xed\xb8\xaa\xab\x53\xf3\x52\x6a\x6b\x01\x01\x00\x00\xff\xff\x92\x81\x68\xf3\x62\x00\x00\x00")

func pkgAuthHtmlBasicMailRecoveryTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicMailRecoveryTmpl,
		"pkg/auth/html/basic/mail/recovery.tmpl",
	)
}

func pkgAuthHtmlBasicMailRecoveryTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicMailRecoveryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/mail/recovery.tmpl", size: 98, mode: os.FileMode(438), modTime: time.Unix(1601585518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicViewsBaseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x92\xcd\x0e\xd3\x30\x0c\xc7\xef\x3c\x85\xc9\x79\x69\xe1\x86\xa0\x99\x34\x21\x71\xe4\x80\x98\xc4\xd5\x6d\xbc\xd5\x52\xbe\x68\xdd\x7d\x10\xe5\xdd\xd1\x5a\xa0\xdd\xf0\xc9\xfe\xd9\xff\xd8\x4e\x92\x33\x58\x3a\x71\x20\x50\x2d\x8e\xa4\xa0\x94\x37\x00\x00\xcd\x5b\x1b\x3b\xb9\x27\x82\x5e\xbc\xdb\x2f\xec\xe1\x82\xc3\x70\x36\x8a\x82\xfa\x0b\x09\xed\xe2\xce\xa1\x27\x41\xe8\x7a\x1c\x46\x12\xa3\x8e\xdf\xbf\xe8\x0f\xea\x35\x1d\xd0\x93\x51\x17\xa6\x6b\x8a\x83\xa8\x7f\xd9\xc5\xba\x18\x84\x82\x18\x75\x65\x2b\xbd\xb1\x74\xe1\x8e\xf4\x1c\xec\x60\x1a\x69\xd0\x63\x87\x0e\x5b\x47\x26\xc4\x1d\x70\x60\x61\x74\x33\x24\xf3\xbe\x7a\xb7\x03\x8f\x37\xf6\x93\x7f\x42\x1c\x9e\xd1\x7f\x43\xf5\x22\x49\xd3\xcf\x89\x2f\x46\xfd\xd0\xc7\x83\xfe\x1c\x7d\x42\xe1\xd6\x91\x5a\x67\x62\x32\x64\xcf\xb4\x55\x0b\x8b\xa3\x7d\xce\x42\x3e\x39\x14\x02\x85\x9d\x70\x0c\x0a\xaa\x52\x40\x43\xce\xd5\xb7\x38\x09\x0d\xd5\x21\xa5\xaf\xe8\xa9\x94\xa6\x5e\x44\xeb\x21\xa3\xdc\xb7\xf1\xc3\x10\xf6\x30\x26\x0c\x90\x5f\x2e\x08\x40\xe8\x26\x5a\x06\x0c\xe3\x29\x0e\xfe\x23\x74\x98\x58\xd0\xf1\x2f\xfa\xf4\x54\x5b\xd6\x06\xf5\xa6\x43\x53\xaf\x8f\xd6\xb4\xd1\xde\x17\x77\xbb\xc2\x83\xce\x0b\xfc\x11\xac\x55\x4d\xbd\xfc\x88\x9c\x81\x82\x85\x52\x7e\x07\x00\x00\xff\xff\x42\x6e\x1f\x54\x43\x02\x00\x00")

func pkgAuthHtmlBasicViewsBaseTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicViewsBaseTmpl,
		"pkg/auth/html/basic/views/base.tmpl",
	)
}

func pkgAuthHtmlBasicViewsBaseTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicViewsBaseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/views/base.tmpl", size: 579, mode: os.FileMode(438), modTime: time.Unix(1601837929, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicViewsLoginTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x4f\x8f\x9b\x3c\x10\xc6\xef\xf9\x14\x23\xdf\x5f\xd0\xde\x81\xf7\xd0\x3f\xd2\x4a\xab\x2a\xca\xaa\xe7\xc8\xc1\x43\x18\x15\x6c\x64\x0f\xd9\x46\xae\xbf\x7b\x65\x07\x92\x10\xd1\x36\x37\x66\x9e\x79\x7e\xf3\x18\x19\xbc\x67\xec\x87\x4e\x32\x82\x38\x48\x87\x02\xb2\x10\x36\x1b\xef\x15\x36\xa4\x11\x84\xac\x99\x8c\x16\x21\xbc\x99\x23\x69\xef\x51\xab\xe5\xc0\xc1\xa8\xb3\x08\x61\x03\x00\x50\xb4\x2f\x55\x9a\x2b\xf2\xf6\xa5\xba\xb4\x1a\x63\x7b\xe8\x91\x5b\xa3\x4a\x31\x18\xc7\xe2\x22\x24\xb1\x93\x07\xec\xa0\x31\xb6\x14\xd8\x4b\xea\xfe\x6b\x08\x3b\x25\xaa\x2f\xb1\x28\xf2\x24\xdf\x8d\x93\x1e\x46\x06\x3e\x0f\x58\x0a\xc6\x9f\x2c\x40\xcb\x1e\x4b\x31\x3a\xb4\xf1\x49\xc0\xd0\xc9\x1a\x5b\xd3\x29\x9c\x91\x02\x48\x3d\xd0\x57\xf7\x0f\xd2\xb9\x0f\x63\xd5\x3c\xb4\x9d\xea\xbf\xa7\x98\x5d\x73\x92\x5b\xbd\x48\x72\x6b\xc7\x30\x8f\xab\x36\xeb\xec\x96\x94\x42\x3d\x93\x2d\xba\xc1\x68\x87\xfb\x28\x0a\x38\xc9\x6e\xc4\x52\xd4\x46\xa1\xf8\x43\xb6\xa5\xbf\xee\x08\x35\xef\x49\x5d\xbd\xde\x67\x5b\x69\x65\xef\xb2\x4f\x49\x7b\xfd\x1c\xc2\x73\x2c\x8b\x8a\x2c\xd6\xbc\x1f\x2d\xad\xe0\x76\x93\xfc\x7d\xf7\xfa\x2c\xd1\xd5\xe6\xee\x54\x37\xd4\x7b\xec\x3f\x0d\x61\xc9\xab\x90\xd8\x4f\x90\x75\x8a\x1b\x0f\x3d\xf1\xd5\x98\x6e\xf0\xb4\xb1\xc8\xe3\xfd\x9d\x8c\x85\x84\xd6\x62\x93\xd0\x3b\x33\x32\xda\xec\x1d\x9d\x23\xa3\x77\x78\x24\xc7\x68\xb7\x92\xdb\xb8\x68\xae\x8b\x5c\x56\xbf\xfe\xe1\x4d\xe9\x66\xe3\x57\x63\x8f\x86\xe1\x6c\x46\x0b\xf3\x35\xf9\x3f\x52\xa6\x04\x8a\x4e\xb7\x57\xe1\xbd\x95\xfa\x88\x90\x6d\xad\x39\x91\x42\xeb\xa6\xef\xf0\x7a\xca\xc5\xf8\xb5\x7b\x17\xe5\x8d\xf4\x8f\xb8\x37\x9d\x19\x3e\x88\x5b\x28\xdc\x20\x75\xe5\x7d\xf6\x4d\xf6\x18\x42\x91\xa7\x3a\x65\x58\x50\xf2\x87\x2c\x97\x3f\xc3\x9d\x34\xb5\x7e\x07\x00\x00\xff\xff\x5a\x29\x1c\xa4\x63\x04\x00\x00")

func pkgAuthHtmlBasicViewsLoginTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicViewsLoginTmpl,
		"pkg/auth/html/basic/views/login.tmpl",
	)
}

func pkgAuthHtmlBasicViewsLoginTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicViewsLoginTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/views/login.tmpl", size: 1123, mode: os.FileMode(438), modTime: time.Unix(1601837973, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicViewsMessageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xc1\x6e\xf2\x30\x10\x84\xef\x79\x8a\x91\x4f\xff\x7f\x81\x17\xa0\x48\x9c\x7a\xaa\xc4\xb5\xc7\x8d\x3d\x81\x88\xc4\x6e\xbd\x0e\x15\xb2\xf2\xee\x55\x42\x0a\x54\x05\xda\xaa\xb7\xac\xf2\xed\xa7\xf5\x4c\xce\x89\xed\x4b\x23\x89\x30\xa5\x28\x0d\x66\x7d\x5f\x14\x39\x3b\x56\xb5\x27\x8c\xd8\x54\x07\x6f\xfa\xfe\x89\xaa\xb2\x61\xce\xf4\xee\x2b\xb2\x97\x09\x5b\x79\x9c\x67\x34\xb5\xdf\x61\x2b\x8a\x92\xf4\x50\xfa\x84\x14\x70\x08\x5d\x04\x5b\xa9\x1b\x88\xb5\xa1\xf3\xe9\x8a\x35\xd2\x86\x3d\xe3\x61\x70\xe2\x63\xf8\x8b\x70\x3a\x8b\xce\xf4\xfd\xf3\xb0\x30\xa1\x93\xae\xf6\x1b\x9c\x90\xdb\xf7\x8c\xeb\x6b\x51\x7d\x0b\xd1\x21\x52\x99\xa0\x9d\xb5\x54\xad\xba\xa6\x39\x5c\xd9\x2c\x83\x1b\x5e\x51\x00\x40\xce\x75\x85\x7f\x7c\xc5\x6c\x2d\x51\x5a\x9d\xad\xc6\x7c\x3f\x85\xf8\x7f\x62\x8f\xfc\xb9\x9f\x0b\x64\x6c\xe9\xf8\x9f\x8d\x12\xf7\xa5\x74\xdf\x39\xe9\x7e\xaa\x3c\xd5\x72\xcb\x78\x02\x7e\x27\xbc\x73\xe3\x99\xb8\x54\x8e\x29\x0f\xdf\x0b\xc1\x36\xb2\x7a\x30\x73\xb3\x7c\x0c\x28\xc5\xee\xb0\x0d\x2d\x17\x73\x59\x16\x13\xf8\x1e\x00\x00\xff\xff\x9e\xee\x26\x57\xe7\x02\x00\x00")

func pkgAuthHtmlBasicViewsMessageTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicViewsMessageTmpl,
		"pkg/auth/html/basic/views/message.tmpl",
	)
}

func pkgAuthHtmlBasicViewsMessageTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicViewsMessageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/views/message.tmpl", size: 743, mode: os.FileMode(438), modTime: time.Unix(1600402845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicViewsRecoveryTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xcd\x8e\xab\x30\x0c\x85\xf7\x3c\x85\xe5\x7d\x8b\xba\x07\xd6\x77\x59\xf5\xce\x0b\x18\x62\x44\x34\x49\x8c\x12\xd3\xaa\x8a\xf2\xee\x23\x5a\xa6\x3f\x1a\x75\x87\x7d\xce\xf7\x61\x29\x39\x2b\xfb\xd9\x91\x32\x60\x4f\x89\x11\xf6\xa5\x54\x55\xce\x86\x47\x1b\x18\x90\x06\xb5\x12\xb0\x94\x13\x0f\x72\xe6\x78\xcd\x99\x83\x79\xef\xf4\x62\xae\x58\x4a\x05\x00\xd0\x4c\x87\xee\xc4\x89\x15\x8e\x94\xd2\x45\xa2\x69\xea\xe9\xd0\xdd\xb3\x51\xa2\x07\xcf\x3a\x89\x69\x71\x96\xa4\x78\x0f\x6e\xa1\xa3\x9e\x1d\x8c\x12\x5b\x9c\x37\x74\x37\x5a\x76\x06\xbb\xa7\xea\x56\x7a\x81\x6c\x98\x17\x05\xbd\xce\xfc\xa4\x10\xac\xf9\xe3\x80\xc1\x51\x4a\x2d\xae\x27\xec\x6e\x14\x42\x20\xff\x86\xcd\x8e\x06\x9e\xc4\x19\x8e\x2d\x72\x50\x8e\x10\xf8\x02\x8f\xc2\x87\xff\x4e\xd6\x18\x0e\xbf\x3a\x95\xef\x75\x38\x93\x5b\xb8\xc5\x9c\xf7\x47\x8a\xe4\xd3\xfe\x6b\xdd\x97\xf2\x49\x92\x96\xde\x5b\x7d\x70\xff\xb7\xf1\xf5\xea\x7e\x51\x95\xb0\x09\x9a\x7a\xdd\x6d\xdf\x04\x53\xe4\xb1\xc5\x1a\xbb\x7f\xe2\xb9\xa9\xa9\xab\xb6\x77\xfa\x09\x00\x00\xff\xff\xda\xa5\x65\x59\xe1\x01\x00\x00")

func pkgAuthHtmlBasicViewsRecoveryTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicViewsRecoveryTmpl,
		"pkg/auth/html/basic/views/recovery.tmpl",
	)
}

func pkgAuthHtmlBasicViewsRecoveryTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicViewsRecoveryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/views/recovery.tmpl", size: 481, mode: os.FileMode(438), modTime: time.Unix(1600402845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicViewsRegisterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xcd\x6e\xe2\x30\x10\xc7\xef\x79\x8a\xd1\xdc\x21\xe2\x9e\x44\xda\xc3\xde\x56\x5a\x44\x9f\x60\x82\x27\xd8\x92\x63\x47\xf6\xb8\x2d\xb5\xfc\xee\x55\xc0\x08\xa8\x54\x6e\x99\xff\x57\x7e\x07\xe7\x2c\x3c\x2f\x96\x84\x01\x47\x8a\x8c\xb0\x2d\xa5\x69\x72\x56\x3c\x19\xc7\x80\x74\x14\xe3\x1d\x96\x72\xe0\x93\x89\xc2\x21\x67\x76\xea\x39\x33\x7a\x75\xc6\x52\x1a\x00\x80\x4e\xef\x86\x5b\xb4\x6b\xf5\x6e\xb8\xaa\x93\x0f\x33\xcc\x2c\xda\xab\x1e\x17\x1f\x05\xaf\xc6\xc5\xb4\x34\xb2\x85\xc9\x87\x1e\x79\x26\x63\x37\x93\x61\xab\x70\xf8\xbb\x1e\x5d\x7b\xb1\x1f\xe2\xc6\x2d\x49\x40\xce\x0b\xf7\x28\xfc\x29\x08\x46\x3d\x37\xc1\xd1\xcc\x55\x42\x58\x2c\x1d\x59\x7b\xab\x38\xf4\xb8\xd6\xe0\xec\x53\x80\xea\x1e\x2d\xc5\xd8\xe3\x0a\xb8\xb9\x2c\xff\x42\xb6\x50\x8c\x1f\x3e\xa8\x1b\xdc\xbe\xde\xaf\xf9\x6e\xad\x2b\xe3\x8f\x8d\x8a\x79\xcf\x3c\x91\xde\xe5\x97\x88\x8f\x7f\x8b\x69\x9c\x8d\x20\xbc\x93\x4d\xdc\xe3\x5b\x3d\x1f\xfb\x63\x12\xf1\xae\x0e\x74\xed\xaa\xd5\x6f\x02\x1d\x78\xea\x31\xe7\xed\xc1\x27\xe1\xb0\xfd\x4f\x49\xf4\x9f\x24\xda\x07\xf3\xc5\x7b\x12\x5d\x0a\x0e\xff\xfc\xc9\xb8\xae\xa5\xa1\xa9\x4f\xe1\x3b\x00\x00\xff\xff\xab\x42\x65\x34\x44\x02\x00\x00")

func pkgAuthHtmlBasicViewsRegisterTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicViewsRegisterTmpl,
		"pkg/auth/html/basic/views/register.tmpl",
	)
}

func pkgAuthHtmlBasicViewsRegisterTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicViewsRegisterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/views/register.tmpl", size: 580, mode: os.FileMode(438), modTime: time.Unix(1601585447, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlBasicViewsStateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x4d\x6e\xe3\x30\x0c\x85\xf7\x3e\x05\xc1\x7d\x6c\x64\x6f\x1b\xc8\x62\x76\x03\x4c\x30\x3d\x01\x1d\xd1\x95\x00\xfd\x18\x32\x55\x34\x15\x74\xf7\xc2\x8e\x82\x26\x68\xbb\x13\xf9\xf1\xf1\x11\x4f\x39\x0b\xbb\xc5\x92\x30\xe0\x44\x2b\x23\xb4\xa5\x34\x4d\xce\x8a\x67\xe3\x19\x90\x2e\x62\x82\xc7\x52\x4e\xfb\x23\x67\xf6\xea\x79\x62\x0a\xea\x8a\xa5\x34\x00\x00\xbd\x3e\x8e\x39\xb7\x67\x8a\xe4\xd6\xf6\x26\x29\xa5\xef\xf4\x71\xbc\xf1\x39\x44\x07\x8e\x45\x07\x35\xe0\x12\x56\xc1\x1b\xd8\xa1\xa5\x89\x2d\xcc\x21\x0e\xc8\x8e\x8c\x3d\xcc\x86\xad\xc2\xf1\xcf\x56\xf4\xdd\x8e\x1f\xc6\x8d\x5f\x92\x80\x5c\x17\x1e\x50\xf8\x5d\x10\x8c\x7a\x56\x82\x27\xc7\xb5\x85\xb0\x58\xba\xb0\x0e\x56\x71\x1c\x70\x93\xc1\x35\xa4\x08\x95\x5e\x2c\xad\xeb\x80\xdb\x81\x87\x7d\x33\xc2\x1b\xd9\xc4\x03\xe2\xd8\xfc\x6c\xaa\x8d\x52\xec\xef\x2e\x35\xa9\xbb\xea\x7b\x0c\xd8\xfd\xb6\x68\x4d\x93\x33\x5f\x86\x2f\xb5\x7c\x3c\x69\x4a\x22\xc1\xd7\xb4\xfa\x6e\xeb\xd5\x37\x81\x8e\x3c\xef\x86\xff\x43\x12\x8e\xed\x3f\x4a\xa2\x4f\x49\x74\x88\xe6\x83\xcf\x24\xba\x14\x1c\xff\x86\x57\xe3\xfb\x8e\xc6\xa6\x7e\xe2\x67\x00\x00\x00\xff\xff\x64\xe2\xc2\x2a\xfc\x01\x00\x00")

func pkgAuthHtmlBasicViewsStateTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlBasicViewsStateTmpl,
		"pkg/auth/html/basic/views/state.tmpl",
	)
}

func pkgAuthHtmlBasicViewsStateTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlBasicViewsStateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/basic/views/state.tmpl", size: 508, mode: os.FileMode(438), modTime: time.Unix(1601588707, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultMailActivationTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xca\x4f\xa9\x54\xaa\xad\xe5\x52\x50\x50\x50\x70\x4c\x2e\xc9\x2c\x4b\x2c\x49\x55\xa8\xcc\x2f\x2d\x52\x48\x4c\x4e\xce\x2f\xcd\x2b\xb1\x02\x4b\xd9\x24\x2a\x64\x14\xa5\xa6\xd9\x2a\x55\x57\xeb\xf9\x64\xe6\x65\xd7\xd6\x2a\xd9\x41\x95\x67\xe6\xe7\x29\x80\x84\x6c\xf4\x13\xed\xb8\xaa\xab\x53\xf3\x52\x6a\x6b\x01\x01\x00\x00\xff\xff\x81\x76\x50\xac\x60\x00\x00\x00")

func pkgAuthHtmlDefaultMailActivationTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultMailActivationTmpl,
		"pkg/auth/html/default/mail/activation.tmpl",
	)
}

func pkgAuthHtmlDefaultMailActivationTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultMailActivationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/mail/activation.tmpl", size: 96, mode: os.FileMode(438), modTime: time.Unix(1601585518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultMailBaseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xb1\x8a\xc3\x30\x0c\x40\x77\x7f\x85\xce\xf3\xe5\xcc\x6d\x37\xd8\x5e\xae\xe9\xda\x0e\xe9\xd0\x51\xb5\x05\x11\xd8\x4e\x48\x44\x42\x09\xf9\xf7\x92\x86\xd2\x4e\xe2\xe9\x09\xf1\xec\xd7\xe1\xf4\xdf\x5c\xcf\x35\xb4\x92\x93\x57\xf6\x35\x08\xa3\x57\x00\x00\x36\x93\x20\x84\x16\x87\x91\xc4\xe9\x4b\x73\xac\xfe\x34\x98\x4f\x59\x30\x93\xd3\x13\xd3\xdc\x77\x83\x68\x08\x5d\x11\x2a\xe2\xf4\xcc\x51\x5a\x17\x69\xe2\x40\xd5\x13\xbe\x81\x0b\x0b\x63\xaa\xc6\x80\x89\xdc\xef\xfb\x95\xb0\x24\xf2\x75\x46\x4e\xd6\xec\xa0\xac\xd9\x43\xec\xad\x8b\x77\xaf\x96\x45\x28\xf7\x09\x85\x40\x6f\x1b\x0d\x3f\xeb\xaa\xac\xd9\xed\x76\xbd\xd5\x3f\x02\x00\x00\xff\xff\x19\x2f\x7e\x41\xd4\x00\x00\x00")

func pkgAuthHtmlDefaultMailBaseTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultMailBaseTmpl,
		"pkg/auth/html/default/mail/base.tmpl",
	)
}

func pkgAuthHtmlDefaultMailBaseTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultMailBaseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/mail/base.tmpl", size: 212, mode: os.FileMode(438), modTime: time.Unix(1601593232, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultMailRecoveryTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xca\x4f\xa9\x54\xaa\xad\xe5\x52\x50\x50\x50\x70\x2e\x4a\x4d\x49\xcd\x2b\xc9\x4c\xcc\x29\x56\x28\x4a\x4d\xce\x2f\x4b\x2d\xaa\x54\xc8\xc9\xcc\xcb\xb6\x02\x4b\xdb\x24\x2a\x64\x14\xa5\xa6\xd9\x2a\x55\x57\xeb\xf9\x64\xe6\x65\xd7\xd6\x2a\xd9\x05\xc1\x94\x81\x04\x6c\xf4\x13\xed\xb8\xaa\xab\x53\xf3\x52\x6a\x6b\x01\x01\x00\x00\xff\xff\x92\x81\x68\xf3\x62\x00\x00\x00")

func pkgAuthHtmlDefaultMailRecoveryTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultMailRecoveryTmpl,
		"pkg/auth/html/default/mail/recovery.tmpl",
	)
}

func pkgAuthHtmlDefaultMailRecoveryTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultMailRecoveryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/mail/recovery.tmpl", size: 98, mode: os.FileMode(438), modTime: time.Unix(1601585518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultViewsBaseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6d\x77\xa2\xba\xb7\x7f\x3f\x9f\x22\xb7\x67\x9d\xdb\xce\x9c\xa2\x88\xd8\x56\x67\x3a\xf7\x58\xb1\x2d\x3d\x40\x1f\xb4\xd3\xea\x9b\xb3\x02\x44\x0c\x05\xe2\x1f\x82\x08\x5d\xfd\xee\x77\x05\xb4\xf5\x21\x3e\xb4\x33\xe7\xdc\x37\xd7\x35\x1d\x31\xec\x24\x3b\x7b\xff\xf2\xcb\xce\x0e\x3c\x3f\x03\x1b\x0d\x70\x80\xc0\x9e\x09\x23\xb4\x07\x5e\x5e\x3e\x01\x00\xc0\xb7\xff\xb2\x89\x45\xd3\x11\x02\x43\xea\x7b\xdf\x8b\x32\x76\x09\x3c\x18\x38\xa7\x7b\x28\xd8\x9b\x15\x22\x68\x17\x97\xf9\x4f\x1f\x51\x08\xac\x21\x0c\x23\x44\x4f\xf7\xee\xbb\xe7\xc2\xc9\xde\xf2\xed\x00\xfa\xe8\x74\x6f\x8c\x51\x32\x22\x21\xdd\x7b\xbd\x5b\x7c\x2c\x12\x50\x14\xd0\xd3\xbd\x04\xdb\x74\x78\x6a\xa3\x31\xb6\x90\x90\xff\x38\x04\x71\x84\x42\x21\xb2\xa0\x07\x4d\x0f\x9d\x06\xe4\x10\xe0\x00\x53\x0c\xbd\xbc\x10\x9d\x56\x4a\xe2\x21\xf0\xe1\x04\xfb\xb1\xbf\x50\x84\x83\xc5\xa2\x15\xa5\x86\x94\x8e\x04\xf4\x9f\x18\x8f\x4f\xf7\x1e\x85\xfb\xa6\xd0\x22\xfe\x08\x52\x6c\x7a\x68\xef\x4d\x27\x8c\x4e\x91\xed\xa0\xf9\xda\x14\x53\x0f\x7d\x7f\x7e\xa6\xc8\x1f\x79\x90\x22\xb0\x07\x2d\x8a\x49\xb0\x07\x4a\x2f\x2f\x40\x00\xcf\xcf\xa5\x3b\x12\x53\x14\x96\x9a\xa3\x91\x01\x7d\xf4\xf2\xf2\xad\x5c\x54\x7a\x6b\x24\xa2\xe9\xfc\x6f\xf6\xf9\x13\xfb\xcc\x3c\x20\x0e\xbd\x83\x7d\xa6\x5d\xd4\x28\x97\x07\x24\xa0\x51\xc9\x21\xc4\xf1\x10\x1c\xe1\xa8\x64\x11\xbf\x6c\x45\xd1\xff\x0c\xa0\x8f\xbd\xf4\x54\x8f\x3d\xfc\xdf\x36\x8e\x46\x1e\x4c\x4f\xa3\x04\x8e\xf6\x3f\x7f\xfd\xb4\xd0\xec\x17\xf0\xbc\x64\x70\x00\x4c\x32\x11\x22\x9c\xe1\xc0\x69\x00\x93\x84\x36\x0a\x05\x93\x4c\xbe\x2e\xc8\xbd\x7c\x5a\x6c\xc7\x24\x76\xca\x6b\x0a\x5a\x4f\x4e\x48\xe2\xc0\x6e\x00\x0f\x07\x08\x86\x82\x13\x42\x1b\xa3\x80\x1e\xc8\x35\x1b\x39\x87\xe0\xb7\xe3\xca\x71\xcd\x86\x87\xe0\xb7\xfa\x71\x5d\x3c\x97\x3e\x7f\x5d\x69\x85\x0d\x53\x28\x86\xd4\x00\xfb\x6c\x50\xfb\x87\x20\x82\x41\x24\x44\x28\xc4\x83\xd5\x0a\xd3\x21\x37\xc0\xc0\x43\x93\xd5\xdb\xd0\xc3\x4e\x20\x60\x8a\xfc\xa8\x01\x2c\x14\x50\x14\xae\x0a\xb9\x71\x44\xf1\x20\x15\xa6\xce\x5e\x2f\xc8\xfa\x10\x6c\x1c\xa2\xdc\xcf\x0d\x60\x11\x2f\xf6\x83\x55\x39\x1f\x07\xc2\x10\x61\x67\x48\x1b\xa0\x22\x8a\xe3\x21\x47\x04\x86\x0e\x0e\x1a\x40\x5c\x31\xf6\xfc\x4f\x1c\x8c\x62\xca\x31\xf6\xbb\xcd\x44\x62\xca\x9c\xd2\x00\x01\x09\xd0\xc6\x2e\x4b\x16\x89\xc3\x08\x45\xb9\x35\x20\x0e\x50\x08\x9e\x3f\xed\x50\x61\x23\x24\x04\x8b\x78\x24\x6c\x80\xdf\x06\x03\x8e\x72\x53\xe4\x31\xb4\xc4\x11\xb3\xd8\x88\xe3\xc9\x1c\xaa\x43\x68\x93\xa4\x01\xc4\x5c\xa6\xf8\x2f\x74\x4c\x78\x20\x1e\x82\xe9\xbf\x12\x0f\x55\x5b\x40\xe2\xc3\x49\x41\x33\xb9\xb7\x7e\x5f\xef\x2c\x89\xab\x19\x19\xa3\x70\xe0\x31\xbd\x86\xd8\xb6\x51\xb0\x8b\x79\xc1\xf0\x88\x63\x30\x32\x82\x16\xa6\x69\x03\x88\xa5\xa3\x9d\x21\xc3\x3e\x1e\xa2\x94\xf1\x23\xab\xcf\xe6\x72\x85\xa7\x27\x45\x13\x2a\xd0\x10\x06\xd1\x80\x84\x7e\x03\xc4\xa3\x11\x0a\x2d\x18\xed\x84\x07\x30\x94\x38\x0a\xef\xd4\xef\x4c\xef\xdc\x5d\x9b\xf1\x3e\xed\x4c\x18\x85\x88\xad\x12\xbb\x61\x4a\x6a\x4a\x47\xb5\xf3\xd5\x7e\x37\x62\x6e\x04\x6d\x3b\x57\xb9\xca\xf5\xe9\x1c\x24\xa4\xda\x8a\xc4\x16\xad\x21\x47\xef\x8d\xca\xbc\xe2\x13\x07\x6c\x96\x0a\xa6\x47\xac\xa7\x35\xe4\x18\xe1\x0c\x35\x40\x45\xe2\x22\x71\x07\xfc\x08\x94\x8c\xd6\x8d\x3a\x47\x88\x8d\x2c\x12\xc2\x82\xe0\x76\x65\x0b\x01\x07\x03\xc2\x19\xf5\x16\x2b\x8f\x48\x84\x8b\x8e\x42\xe4\x41\x8a\xc7\x68\x55\x66\xe3\xc4\xcc\x15\xce\x39\x9e\x4f\xda\xcb\xda\x8e\x42\xe2\x84\x28\x5a\x24\xb7\xf5\x5a\x41\x33\x22\x5e\x4c\x39\x5a\x6d\x30\x62\x58\xf0\xfe\x06\x0b\x4f\x15\xce\x05\xd7\x0f\x78\x3b\xec\x66\xa3\xd9\x6d\x9a\xd8\xb6\xbd\x95\x7a\xab\x3c\x9d\x67\x2b\x59\x8d\x77\x73\xad\x7b\xd6\x29\xdb\x68\xc0\x01\xe5\xda\x7d\x17\x5d\xde\x35\xfd\xa7\xab\xf9\xfe\xfe\x26\xe4\x6d\xf1\x31\x97\x6c\x07\x94\x7b\x63\x17\x43\x1d\x1d\xed\x68\x27\x81\x41\x65\xdd\xd2\x3f\x25\x01\xfe\x72\xb4\x91\x04\xb6\x32\xf6\xb2\x3e\x26\x0d\x7e\x8e\x86\x0b\xb7\x72\x0d\xb6\xe4\xf1\x55\xc4\x83\x9f\x5c\xf8\x37\xb2\xee\xbc\x25\x8f\xb8\xf4\x34\x63\x2f\xc6\xb6\x40\xe2\xba\x75\xf7\x95\x77\x33\xaf\x82\x6d\x54\x67\xc5\x61\xc4\xc6\x32\x22\x98\x1f\x9c\xbe\x23\xc4\x63\xeb\xbf\xc0\xf6\x6f\xdc\x79\xb8\x1c\x27\x58\x70\x84\x29\xf4\x70\xb6\x4b\xab\xeb\x22\xd6\x55\xc0\x24\x43\xcc\x9b\x75\x33\xb8\x54\x46\x13\x10\x11\x0f\xdb\xdb\x90\xf5\x2f\xc0\x47\x14\x39\xe0\x9d\x87\x8f\xfc\x8f\xc2\x67\x67\x8e\xcd\x3d\xc0\x78\x2f\x24\x1e\xc7\x07\xf3\x01\x00\x9f\x3b\xde\xd7\x93\x8d\xc7\x38\xc2\x84\xc7\x0f\xf3\x5d\xc9\x6b\x22\xac\x5c\xc2\x24\x94\x12\x9f\xa7\x0f\xa7\x4b\x87\x50\x61\x04\xa3\x28\x21\xa1\xfd\xa1\xf1\x4d\x1d\x6a\x7a\x90\x17\x5f\xbd\x67\xf4\x0b\xaa\x7c\xe7\x86\x7c\x73\x44\x5c\xff\x67\x43\x76\xb0\xcb\xba\xf0\x81\xe0\x6e\x14\x92\x31\xb6\x51\x18\x09\x26\x99\x70\x46\xb8\x65\x5f\x95\x6f\x97\x93\x10\x8e\x58\x5f\xec\x7b\xfb\x8e\x3a\x24\xc9\x4f\xec\xcf\x17\x76\xfb\x11\x85\x21\x27\xbc\x2a\x64\x5e\x9b\x62\xf6\x47\x02\x1a\xa3\xc0\x4b\x77\x33\x06\xc7\x0e\x53\xe0\xf0\x81\x3e\x8b\x0a\xf8\x77\xcb\x5f\x56\x58\xec\xf7\xaf\x5f\xca\x5c\x43\x31\x02\x13\x01\x8c\x29\xd9\xb0\x39\x5c\x8d\x3e\xd6\x0d\xa4\x31\x64\x3b\xd7\x4d\xc0\x2d\xd5\x76\x34\x09\x7f\x02\x7c\x00\x71\x45\x82\x4b\xd8\x60\xeb\xb9\x85\x04\xfb\xd0\x41\x8d\x3c\x4f\xb6\x67\x43\x0a\x1b\x79\x41\x39\x1a\x3b\x7f\x4c\x7c\xef\xab\x09\x23\x74\x24\x1f\xde\x5c\x1a\x52\x3f\x3d\x1b\xf5\x15\x11\xf7\xa5\xfa\xb8\x2f\x4d\x3c\x15\x37\xff\x52\x5b\x4d\x47\xbd\x1c\x52\xf3\xa2\x96\xdd\x74\xae\x88\x7d\x79\x97\x5c\xe3\x93\xb1\x5d\xb5\xab\x5a\x60\x65\x9a\x5f\x4f\xfb\xe9\x49\xaa\x2b\xcd\x44\xab\xb2\x36\x54\xc7\xf6\x3d\xcf\x16\xaf\xc6\x48\x11\xb1\xde\x6a\x26\xaa\xa2\x57\xf2\x3f\x57\x2e\xda\x53\x26\x49\xef\xf1\x8e\xa8\x17\x46\xd4\x7b\x34\x58\xbb\x91\x29\xd9\x63\x15\x9f\xf9\xf0\x61\x12\xdd\x74\x54\xd7\x50\x54\xd9\x78\xe8\x89\x2a\x3e\x7b\xba\xe9\x5c\x19\xba\xdb\x8b\x0d\xf7\x36\xd2\xbb\x4e\xac\xfb\xed\x89\xde\x92\x33\xa3\x95\xcc\xbe\x13\x4d\x69\x46\x7a\x4b\x8c\xf5\x6e\x8f\xea\x1d\x59\x36\xda\xce\xe4\xfa\xb2\x97\x69\xee\xad\x0c\x95\xdb\xf8\x5a\xb9\x3b\x33\x5a\xf2\xc4\x68\x25\xa2\xe6\xb6\xc5\x42\x3e\x99\x68\x8a\xca\xfe\x52\xcd\xbd\x97\x6c\x57\x8d\x75\xb7\xaf\xea\xee\xdd\xf0\xba\x25\x57\xaf\x5b\x89\xac\xb9\x96\x3c\x95\x4d\x34\x45\x8d\x0d\xd7\xa1\x06\x96\x25\xdd\x23\x58\xcb\xd6\x8e\x07\x9b\xd5\x3b\xd1\x94\x44\xc7\xbc\xa8\x07\x66\xaa\x3a\x7d\xdf\x8b\x4c\x45\xc4\x6a\xa6\x8b\xbd\xae\x53\xd1\x59\x99\x22\xe2\x6e\xb7\x2d\x6b\x8a\x5a\xed\x75\x9d\xd8\xe8\x3e\x45\xd7\x2d\xb9\x72\xdd\x99\x8d\x27\x91\xb4\xae\x1a\xeb\xdd\xa1\xae\xbb\xed\x48\x77\xd5\xd8\xe8\xf6\xcf\x8c\x8e\x2c\xea\x69\x52\xd1\xdc\xdb\xec\x6d\x1c\xed\x4c\x53\xda\x35\xcd\xb5\x26\x1d\xa5\x9d\xfc\x70\xd5\xb4\xc7\xda\x7b\x6b\x4b\xd6\x94\x1f\x50\xc5\x27\x7f\xb4\x70\xd3\x51\x5b\xcd\x13\xeb\xe2\x5c\x84\xad\x33\xd7\xbc\x38\xcf\xac\x4c\xc4\xe6\xc5\x0f\xdf\x6e\x9d\xad\xf8\xa2\xef\x5f\xe1\x5e\xd6\xac\xbc\xfa\xa2\xab\x47\x7a\xf7\x29\x36\xb2\xf3\xa1\xd1\x91\x33\x1d\x33\x5d\xf4\xf4\x4d\x97\x26\xd5\x53\x59\xd4\xbd\xde\x84\xf9\x41\x6f\xb7\x6b\x9a\xf2\x34\xb5\x61\x33\xd2\xbb\xcd\x48\x77\xaf\x22\x3d\x15\x53\xcd\xd5\xb3\x07\xac\x8e\x6f\x1c\xc2\x74\x72\x6e\x2e\xcf\x86\xf6\x85\xe3\xf4\xa4\xc9\xd0\xaa\xea\x75\x35\xb8\x1b\x5b\x3c\x9d\x1e\xda\xa2\x9e\xe9\x73\x3a\x39\x91\xde\x65\xf6\x19\x0e\x8d\x96\x2c\x1b\x98\xf9\xd9\x91\xde\x74\xd2\x63\x43\xb9\x8d\xf4\x8e\x9c\x19\xf7\x49\x9a\x63\x87\x5d\xb7\xdb\xb2\xe6\xf6\x2a\x9a\xe2\xc4\x86\x7b\x3f\xa7\xa3\x13\x5d\x3f\x2c\xe8\x4d\xaf\x5b\x49\xc5\x54\xf4\x48\xc7\x72\xa6\x4b\x6d\x36\x66\x49\x53\xee\x63\x3d\xeb\x4d\x65\xda\x91\xd1\x11\x33\xe6\x83\x07\xac\x3a\x0c\x1f\x37\xad\x7a\x66\xfb\xd6\x1f\x7b\x9c\xc0\x69\x6e\x92\x16\x4b\x92\xc5\xa8\xe6\x9d\x11\xef\x5c\x06\x75\xdb\x7a\x0c\x2d\x64\x12\xf2\xf4\x6b\x79\x43\xa9\xcb\xe6\x43\xe2\xd8\xfe\x8f\xd4\x92\xbc\xb1\xe9\x8a\x58\xef\xc8\x89\x8a\xcf\x3c\xd3\x37\xc6\xfd\x0b\x2f\xee\x67\x22\xb6\x1f\xef\x7c\xad\xeb\xe0\x1b\x66\x93\x82\x6b\xa4\xfe\xe3\x55\x06\x1f\xea\xf1\x4d\x47\x9d\x68\x6e\x1b\xab\x17\x1e\xf3\xa5\xdf\x7b\x30\xbc\x9e\x5f\x1f\xc3\x54\x75\xd0\x45\x25\x32\x03\xfd\xc8\x92\xa8\x67\x5f\x18\x64\x85\x83\xfc\xab\x31\xbc\xf8\x41\xe1\xc3\x79\xdc\x93\xea\x4f\xf0\xa1\x16\x68\xbe\x31\x36\x3b\xf5\x0c\x4a\x3f\xc4\x9e\xe4\x8c\xcd\x40\xc7\x2d\xe7\x69\xd6\x56\x5d\xf5\x87\xa2\x7d\xd9\x3c\xd2\xd2\x7a\xd5\xae\x5a\xb1\x9d\xe9\xb1\x59\xbd\x0a\xb4\x4c\x4d\x74\xa5\x39\xb6\xaa\xfd\x40\xc5\x67\xb2\xf9\x30\x89\xad\x6c\x24\x9b\x17\x5e\x0c\x33\x11\xc3\xcb\x3b\xd1\x52\xc8\x58\xab\xda\x55\x3b\xad\x55\xf5\xb4\x36\xb6\x7c\x6b\xac\x77\x9f\x6a\xd7\x9d\x7a\x21\xc7\x74\x66\xbc\x77\x79\x26\xab\xf8\xac\x76\xd3\x51\x13\xeb\xd2\xc1\xea\x65\x7f\xd4\x7f\xb4\x5b\x66\xd5\xa9\xab\x6e\xd3\xd1\x5b\xcd\x8a\xae\x34\x1d\xa3\xdb\x4c\x54\x87\x5c\xa9\x97\x86\x88\x1e\x26\xde\x4d\xe7\xca\x33\xfd\x73\x6c\x5e\xdc\xd3\x9e\x7f\xee\x42\xc9\x4e\xcd\xea\x8f\xb8\xaf\x8c\xe2\xfe\xa3\xe5\x14\x7c\x7a\x9f\x4c\xeb\x1f\x17\x7a\x26\x47\x56\xf5\x6c\xd8\x93\xee\xeb\x6a\x70\x96\xf6\x1f\x0d\xcf\x0a\xfa\x1e\xe3\xdb\xd9\x7c\x7a\xe3\x1f\x43\x31\xee\xdb\xb5\xeb\xce\x2b\xff\x64\x46\x4b\xae\x6a\x4a\x3b\xd5\x2f\x74\xaa\x77\xf5\xd8\x48\x93\x44\x73\xd9\xf5\x2d\xbb\x9e\xe4\xf7\xbb\x6d\x51\x73\xad\x28\x2f\xab\xea\x89\x56\xf0\x91\xa8\xb9\x3a\xc3\x7e\xaa\x67\x56\x6c\xb0\xfa\x2d\xb9\xe0\x22\x76\x7f\xbe\xbe\x32\x57\x5f\x4a\x26\xba\x6b\xc5\xd7\xad\x84\xf1\x94\xac\xa7\xb2\xd4\x72\x3c\xa2\x75\x75\x51\x73\x87\x92\xd6\xbd\x4d\x34\xd7\x20\x7a\x76\x1b\x5f\x5f\xf6\xa8\xee\x3e\xc5\x86\xc4\xfa\x54\xa9\xd1\xb5\x22\xa3\xdb\x8e\xaf\x5b\x62\x45\x4f\xe5\x54\x53\xee\x27\x1a\xe3\xe4\xae\x1e\xeb\x81\x9e\xe9\x1d\xd6\x7f\x33\xd2\xb3\x76\xac\x77\x92\x89\xe6\xf6\x25\x3d\xeb\x13\xad\xcb\x30\x66\xb8\x5a\x97\x71\xbd\xc5\xf4\x4c\xb5\xae\x9a\x14\x9c\xc9\xfa\x68\x16\x9c\x16\xf4\x52\xa3\x23\x57\x3b\x8a\x2e\x1a\x17\x09\x35\x3a\xac\x8f\x42\x9f\x42\x3f\xeb\xaf\xd6\x63\x6f\xa2\x33\x3e\xb9\xd0\x73\xae\xc8\xfb\x66\x36\x53\x7a\xb2\xa6\x9c\xb9\xd3\x71\x27\xd3\x31\x73\xec\x68\x67\x7a\x4b\x16\x99\x2e\x79\xbd\xae\x9a\x19\xa9\x2c\xf6\x52\x31\xd1\xdc\xdb\x42\xbe\x25\xce\xdb\x7d\xda\x46\x51\xd6\x51\x0a\x9f\xa1\x82\x37\x4f\xf2\x75\x37\x93\xff\xfa\xbf\xe7\x98\xf2\x17\xd0\xb9\x6e\xa9\x4d\x0d\xdc\x34\x8d\xb6\x06\x5a\x9d\x0e\x58\x0a\xd3\x4a\x11\xb1\x30\xf4\x84\x11\x0c\x90\xb7\x63\x86\x71\x80\x27\x88\x93\x96\x9b\xe6\x10\xb9\x29\x93\x62\xbf\x74\xc2\x8f\xf1\xdf\xb6\x0a\xf9\xa5\x07\x29\x7a\x3c\x60\x83\xe3\x18\x30\x97\x98\xea\xf1\x5a\x11\x88\x25\x39\x02\x08\xe6\x39\x5d\x81\xc4\x74\x33\xf3\xf2\x87\x5c\x62\xfb\x42\xd3\xe3\x9d\x09\xf1\x35\x14\xd8\x96\xe5\xf3\xee\x5d\xfd\xc2\xc3\x26\x6e\xe6\x67\x29\x69\x70\x34\x9a\x80\x6a\x65\x34\x01\x42\xe5\x78\x2e\x75\x50\xad\x1c\x82\xfa\xf1\x21\x10\x4b\x47\x3c\x7c\x4e\x13\x19\xb5\xb7\x44\x86\x28\x56\xce\x8f\x2a\xef\x3e\x9f\xda\xf5\xd8\xf1\x63\xfb\xa4\xb5\x87\x9d\xab\x67\x8c\x1f\xcb\xe0\xbf\xce\xb1\xa3\xfa\x86\x9c\x43\xf5\x78\xdb\x41\x8c\x05\x3d\x2b\xc7\x32\x10\xc0\x7b\xf1\x62\xc6\x94\x92\xa0\x64\x79\x24\x42\xc2\x9a\x94\xe6\xfa\x3c\xe5\x0c\x50\xf5\xe3\x66\xad\xd5\xfe\x40\x6e\x6e\x6e\x73\xce\x3f\x43\xdc\x39\x1f\xcd\xcd\x22\x85\x6b\xf2\xce\xef\x32\x49\x63\x40\xac\x98\x77\x96\xf0\x8e\xc4\xe2\x42\x07\xa3\xdd\x66\xe9\xba\x49\xb1\x34\x51\xc5\xf9\xec\xdd\x4f\x64\x7a\xb9\xa9\xba\xfc\xd4\xed\x15\xa7\x27\x1b\xb3\x79\x12\xd3\x81\xd1\x00\x3f\x67\xfc\xd3\x07\x0b\xb5\x4d\x27\xd0\x9c\x5a\x6b\x18\xb5\xc6\xe7\xfc\x2d\x07\x66\xe0\x6d\x42\x4a\xd5\xf7\xe1\x69\x04\xf0\xda\x9c\xdc\x4e\x79\x89\xa5\xd6\x36\x9d\xa2\x9e\x9f\x1f\xd7\x78\x39\xd9\x0f\x64\x1c\x16\x7a\x1d\xca\x1b\x86\x20\x71\xce\xaf\xc1\x0e\xec\xb0\x13\x91\xfe\x0a\x88\x7e\xf0\x80\x7f\xc1\x02\x31\x6f\x6d\xdd\xb2\x3e\x79\x38\xa2\x42\xfe\x20\x93\x40\xd3\x11\x97\x28\xc0\xfc\x0c\xe2\xd8\x70\xb7\xc7\x61\x56\x54\xf5\x36\x43\x6e\x7b\x52\x99\xd3\x20\x0f\x77\x9c\x43\x09\xa5\xd5\xae\x9c\x4b\x3b\x1c\x4a\xf0\xce\x72\xb6\x50\xdf\xd6\xe5\x62\x8b\x43\x7e\x6d\x20\xf0\x7a\xac\xb9\xe9\xc8\x80\x7f\xf3\x67\xe7\xe3\xd4\x23\x6b\x33\x95\x53\x63\xbf\xd1\xc2\x51\x93\x47\x0b\x8b\xe1\x5c\x9d\x11\x38\x63\x71\x81\x5d\x71\x2b\xad\x24\x18\x3c\x02\x29\x0e\x9c\x8d\xa1\xc3\xab\xcf\xa5\xa3\x12\x77\x99\x7e\xf7\xe2\xb7\x00\xb8\xf5\xa2\x2b\xb1\xaa\x24\xbd\xc6\xaa\xbf\x89\xd5\x4a\xad\x7a\xf6\xce\x05\xf3\x3d\x01\x0d\x3f\x82\x5e\xa0\xab\x35\x31\xcf\xe2\xf9\xd8\x96\xb8\x68\xcd\x4e\x69\xb6\x1f\xe2\x57\x0f\x37\xf5\x9f\x09\x38\xb0\xd1\xa4\x01\xea\xf5\xfa\xee\xee\x5f\x8f\x45\xee\x06\x84\x6f\xde\x0d\xde\xdf\xd8\xf7\x2f\x08\xd1\x5e\xdb\x5b\xf3\x7c\xc1\xc7\x23\xb4\xb7\xb3\x55\x71\xd3\x32\xb9\x3e\x42\xdb\xba\xd9\x98\x01\x86\x01\xbb\xc2\x9d\x62\x3b\xe3\xe5\x7d\xe1\xd7\x2f\x8f\xb1\xe6\xb0\x77\xf2\x1e\x7f\xfd\x3b\x41\xd1\x9f\x3e\xb2\x31\x04\x91\x15\x22\x14\x00\x18\xd8\xe0\x60\x6e\x1f\x26\x9f\xb0\xcd\xd7\xf2\x53\xa1\xe0\x43\xe9\x80\xf5\xc6\x5d\xdd\xe0\x71\x14\x05\x3b\x90\x33\x78\xe3\x01\xfe\xd6\xe1\xe5\x13\xff\xd7\xb7\xf2\xd2\xc3\xd9\xcf\xcf\xe5\x2f\xec\xbb\xa3\xa9\x4a\x1b\x74\xaf\x6f\xf2\xd2\x2f\xe5\x97\xb9\x3a\x9c\xe7\xb9\x4b\x91\x87\x6d\x24\x50\xc2\xdb\x10\x09\x09\x32\x9f\x30\x15\x60\x80\xfd\xa9\x7b\xde\xc4\xc5\xd2\xf1\x42\x2e\x86\xa1\x97\xf3\x2c\xf1\x47\xeb\xae\xa6\xb8\x84\x77\x7d\x8a\xda\x5f\xc0\x05\x0a\x50\x08\x29\xb2\x81\x99\x82\x66\x80\x7d\x1c\x51\x08\x48\x00\x24\x51\x12\x85\xba\x50\x61\xcb\x52\x43\xaa\x37\x6a\xb5\x59\x15\x0d\x5b\x28\x88\x90\x0d\xe2\xc0\x46\x21\x38\x0f\x11\x3a\xeb\x28\xb3\xe2\xd2\x4c\xac\x83\x50\xfe\x7c\x7e\xa3\x5c\x86\xd3\x76\x4b\x01\xa2\x65\xaf\x90\x03\x03\x12\x02\x9f\x84\x08\xe0\x60\x40\x5e\x6b\x25\x0d\x5e\xa5\x43\x40\x1b\xe0\x4f\x2b\x8a\x66\x85\x33\xf1\xf7\x0d\x1a\x7c\x29\x2f\x9b\xed\xcb\xa2\x47\x76\x6f\x71\xb9\xde\xab\x23\xdf\xfc\xf8\x8b\x9a\x5e\xcc\x54\xfe\x39\x43\xdd\x13\x4a\x07\x21\xf4\x51\x04\x36\x61\x54\xfc\x7d\xcd\xb4\x9a\x35\xc3\x9b\xc1\xbd\x03\x91\x33\x7f\xc1\x9a\xf9\xce\x97\x7e\x59\x29\xc9\xd3\x3f\x1f\x51\x46\x90\xf8\x84\xb2\x5e\xa1\x75\x35\x96\xe9\x62\xd1\xb2\xff\x6f\xd1\xf5\x0a\xed\x6a\xd1\xd9\xd5\x02\x01\x7f\x2b\xbf\xbd\x70\xf4\xcd\x24\x76\xfa\xbd\xb0\xfc\x37\x1b\x8f\x81\xe5\xc1\x28\x3a\xdd\x5b\x79\x75\x61\xfe\x75\x9d\x15\xb9\xbd\x45\x9a\x5e\x15\x98\x3d\xd0\xbd\x24\x98\x0b\x0f\x8f\xbe\x37\x63\x3a\x44\x01\xc5\x56\x3e\x65\xbf\x95\x87\x47\x3c\x39\xe9\x3b\xf7\x3d\xa0\xa1\xb4\xd4\x7b\xd9\xc6\xe3\xad\x0a\x31\x9a\xe3\x68\x33\xff\x0e\x12\x33\x4d\xfe\x06\xd2\xa6\xe6\xe7\x7e\x2e\x5c\x16\x76\xcd\xaf\x07\x84\x50\x14\xce\xbf\xa9\x64\x85\x78\x44\x17\x3b\x2f\x97\x81\x6a\x74\xda\x77\x5d\x70\xd5\x01\x97\xed\xbb\xf6\xd2\xbb\x42\xe5\xf2\xe2\xa9\xc9\x55\x67\xe1\xb6\x45\x82\x88\x82\xd9\xfa\xfd\x37\x5b\xbf\x4f\x81\x4d\xac\xd8\x47\x01\x2d\xfd\x27\x46\x61\xda\x41\x1e\xb2\x28\x09\x0f\xf6\x17\xd6\xf9\xfd\x25\x18\x15\x2d\xe5\xb9\xcc\x6d\xcd\xbc\x26\x3c\xf9\x6d\x14\x21\xcc\xdf\x79\x08\xf3\xf7\xdb\x21\xce\x86\x06\xf9\x41\xcf\xca\xfb\x57\xf3\xc3\x2c\x41\xdb\x6e\x8f\x51\x40\x35\x1c\x51\xb6\x7a\x1e\xec\x5b\x1e\xb6\x9e\xf6\x0f\xc1\xc1\x67\x70\xfa\x9d\x33\x21\xf9\x7a\x95\x72\x7c\xb0\x56\x4a\x94\x38\x8e\x87\x0e\xf6\xa7\xc1\xd6\xfe\xe7\xc5\x59\xb5\xac\xce\xab\xad\xfe\x09\x5d\x42\xe4\x93\xf1\x46\x5d\xde\x90\x38\x8f\xab\x6f\xe5\x79\xd8\x7d\x2b\x17\xef\x20\x3e\x3f\x03\x14\xd8\xe0\xe5\xe5\x7f\x03\x00\x00\xff\xff\x17\x50\xe5\xd8\xb5\x38\x00\x00")

func pkgAuthHtmlDefaultViewsBaseTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultViewsBaseTmpl,
		"pkg/auth/html/default/views/base.tmpl",
	)
}

func pkgAuthHtmlDefaultViewsBaseTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultViewsBaseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/views/base.tmpl", size: 14517, mode: os.FileMode(438), modTime: time.Unix(1601592945, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultViewsLoginTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\xc1\x8e\x9b\x40\x0c\xbd\xf3\x15\xd6\xdc\x43\xa4\x3d\xec\xa1\x02\x7a\xd8\xaa\xd2\x4a\xab\x76\x95\xb4\xe7\x68\xc2\x38\x30\x2a\x8c\xd1\x8c\x49\x37\x1a\xf1\xef\xd5\x90\x10\x42\x4a\xda\xb4\x7b\x4b\xf0\xf3\xf3\xf3\xc3\x36\xde\x33\xd6\x4d\x25\x19\x41\x6c\xa5\x43\x01\x71\xd7\x45\x91\xf7\x0a\x77\xda\x20\x08\x99\xb3\x26\x23\xba\xee\x85\x0a\x6d\xbc\x47\xa3\xa6\x80\x2d\xa9\x83\xe8\xba\x08\x00\x20\x29\x1f\x20\xaf\xa4\x73\xa9\xd8\x91\xad\x17\x25\x4a\x85\x56\x64\x7d\x6e\xb2\x2c\x1f\xb2\x23\x4c\xe9\xfd\x04\xa7\xf4\x5e\xbb\x50\x26\x4b\x96\x4a\xef\x4f\xa8\x10\x82\x1a\xb9\x24\x95\x8a\x86\x1c\x8b\x63\x60\x96\x22\x27\xc3\x96\xaa\x0b\x48\x0f\xd3\xa6\x69\x19\xf8\xd0\x60\x2a\x18\xdf\x58\x4c\x92\xfa\xa8\x80\xa6\x92\x39\x96\x54\x29\xb4\xa9\xf8\x76\x68\x10\x0e\xd4\x5a\xc0\x5a\xea\x4a\x80\x91\x35\xa6\xa2\x75\x68\xc3\xaf\x4b\x0d\xa3\xd6\xff\x95\xd4\x48\xe7\x7e\x92\x55\xff\x22\x6b\xcc\x39\x2a\x3b\xff\xbf\x57\x59\x41\xbc\x98\x49\xea\x91\x12\x4a\x8b\xbb\x54\x78\x1f\xaf\xa8\x65\xb4\xf1\x1a\x5d\x78\x35\x6b\x96\x8c\xaf\x92\xcb\xae\x13\xd9\xe7\x9e\x64\x2a\xe7\x63\xb2\x94\xbf\x29\x88\x66\xbb\x2e\xb5\x52\x68\x06\xfd\x16\x5d\x43\xc6\xe1\x26\x04\x05\xec\x65\xd5\x62\x2a\x72\x52\x13\xaf\x6f\xe7\xe7\x95\x46\xc3\x1b\xad\xce\xb9\xde\xc7\xaf\xd2\xca\xda\xc5\x4f\x7d\xec\xf9\x53\x10\x7d\x9f\x16\xa5\x2d\xe6\xbc\x69\xad\x9e\xa1\x5b\x9d\xc2\xdf\x57\xcf\xf7\x32\xba\x9c\x2e\xba\x1a\xa9\xd6\xe1\xf9\xdd\x24\xc1\xfc\x39\x92\xf0\xbc\x27\x79\xd7\x14\xba\x76\x5b\xeb\x71\x35\xb6\x6c\xce\xb5\x9e\xc8\xb0\x36\xed\x8d\xb1\x4f\x96\xa1\xc4\x5f\x97\x7a\x4c\x2d\x1f\xb3\xaf\x16\x9c\x2e\x0c\xb4\x0d\xb4\x4e\x9b\x22\x59\x96\x8f\x03\xdb\x38\x33\x97\x6c\x8d\xa5\xbd\x56\x68\xdd\x62\x4b\x6f\x17\x6c\xde\x5b\x69\x0a\x84\xf8\x75\x00\x9c\xce\xd0\x9c\x17\x03\xc9\x95\x0f\xd7\x43\xff\xa2\xcd\x8f\xc9\x5b\xb9\xc5\xe7\x7d\xfc\x45\xd6\xd8\x75\x8b\x91\xf9\x6a\xed\x46\xc3\xe4\x95\xf9\x53\xdc\x70\x54\xff\xe4\xc1\xbb\x1c\xbd\x6e\x72\xba\xd9\x2b\x2c\xb4\x63\xb4\xa7\xe5\x06\xc7\x87\xea\x74\x2d\x17\x0a\x73\xb2\x32\x7c\x01\x3e\x80\x21\x83\x77\x5c\x60\x08\xe3\x33\xed\x77\xa8\x30\x3f\x42\x32\x8b\xa2\xf0\x41\x39\x9a\xf0\x2b\x00\x00\xff\xff\x9e\xe6\x9c\xb8\x91\x06\x00\x00")

func pkgAuthHtmlDefaultViewsLoginTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultViewsLoginTmpl,
		"pkg/auth/html/default/views/login.tmpl",
	)
}

func pkgAuthHtmlDefaultViewsLoginTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultViewsLoginTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/views/login.tmpl", size: 1681, mode: os.FileMode(438), modTime: time.Unix(1601593053, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultViewsMessageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\x31\x6f\xb3\x30\x10\x86\x77\x7e\xc5\xc9\xd3\xf7\x0d\x09\x52\x86\x0c\x15\x41\xca\xd4\x2e\x95\xb2\x76\x3c\xec\x23\x58\x31\x76\xeb\x33\xb4\xc8\xe2\xbf\x57\x10\x4a\x52\x35\x49\x5b\x75\x3c\x78\xee\xd1\xcb\x7b\xc4\x18\xa8\x7e\x36\x18\x08\x44\x81\x4c\x02\x96\x7d\x9f\x24\x31\x2a\x2a\xb5\x25\x10\x28\x83\x76\x56\xf4\xfd\x23\x31\xe3\x9e\x62\x24\xab\xbe\x22\x2d\x4e\xd8\xd6\xc2\x69\x06\xa3\xed\x01\x2a\x64\x28\x88\x2c\x30\xd9\x00\xc1\x41\xe7\x1a\x0f\x54\xa3\x36\x80\x52\xba\xc6\x86\x0b\x56\x4f\xd2\xb5\xe4\xbb\xc1\x09\x1f\xc3\x5f\x84\x53\x2c\x52\xa2\xef\x9f\x86\x85\x09\x9d\x74\xda\xee\x61\x46\xae\xe7\x19\xd7\x77\xc8\xfc\xea\xbc\x02\x4f\x4c\x01\xb8\x91\x92\x98\xcb\xc6\x98\xee\xc2\x66\xe1\xd4\xf0\x15\x09\x00\x40\x56\xad\xf2\xa9\xc9\x2c\xad\x56\xf9\xf8\x30\x46\x5d\xc2\x3f\x7a\x81\xe5\x0e\x3d\xd6\xbc\xdc\x8e\xa5\x7f\x6a\xf6\xff\x24\x38\xf2\xa7\xa3\x9d\x21\xe3\xe9\x8e\xef\xc9\x30\xc1\x6d\x29\xa9\xef\x9c\xa4\x7e\xaa\x9c\x6f\x75\xcd\x38\x03\xbf\x13\xde\xc8\x78\x22\xce\x95\x63\xf5\x63\xcf\x4a\xb7\x20\x0d\x32\x6f\x44\xe9\x7c\xbd\x50\xba\xd5\x3c\xb4\x94\xcf\xba\xac\x5a\xe7\xf7\x0e\x0a\x94\x87\xe1\x27\xca\x10\x2a\x4f\xe5\x46\xa4\x02\x38\x74\x86\x36\x22\xd0\x5b\x58\x28\x92\xce\x8f\x0d\xdf\x81\x75\x96\x44\xfe\xe0\x6a\xca\x52\xcc\xb3\xb4\x5a\x1f\x75\x59\xaa\x74\x9b\x27\x53\x82\xf7\x00\x00\x00\xff\xff\x1e\xfa\xf6\x9f\x55\x03\x00\x00")

func pkgAuthHtmlDefaultViewsMessageTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultViewsMessageTmpl,
		"pkg/auth/html/default/views/message.tmpl",
	)
}

func pkgAuthHtmlDefaultViewsMessageTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultViewsMessageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/views/message.tmpl", size: 853, mode: os.FileMode(438), modTime: time.Unix(1600402845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultViewsRecoveryTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\xbf\x6e\xb3\x30\x10\xdf\x79\x8a\xd3\xed\xf9\x90\x32\x64\xf8\x04\x2c\x19\xda\x39\xea\x0b\x1c\xf8\x22\x5b\x35\x3e\x64\x1f\xb4\x08\xf1\xee\x15\x21\x6d\x82\x1a\xa9\x95\xba\xd9\xba\xdf\x5f\xfb\xa6\x49\xb9\xed\x3c\x29\x03\xd6\x94\x18\xe1\xdf\x3c\x67\xd9\x34\x19\x3e\xbb\xc0\x80\xd4\xa8\x93\x80\xf3\x7c\xe2\x46\x06\x8e\xe3\x34\x71\x30\x5b\x4c\x2d\x66\xc4\x79\xce\x00\x00\x0a\xbb\x87\xc6\x53\x4a\x25\x9e\x25\xb6\x3b\xcb\x64\x38\x62\x75\xe2\xc4\x0a\xc7\xc8\x86\x83\x3a\xf2\xa9\xc8\xed\xbe\x5a\x29\xc6\x0d\x1b\x8e\x71\x83\x4b\x8b\x6b\x55\xe4\xc6\x0d\x57\xd4\x32\x82\x96\xd5\x8a\x29\xb1\x93\xa4\xb8\x0e\x1e\x4a\x34\x12\x34\x8a\xbf\x83\x5c\x60\x2e\x74\xbd\x82\x8e\x1d\x97\xd8\x51\x4a\x6f\x12\x0d\x42\xa0\x76\x73\xef\x3c\x35\x6c\xc5\x1b\x8e\x25\xbe\x8c\x1d\xc3\x28\x7d\x84\x1b\xe0\xde\xe9\x22\x79\x1f\x65\x8d\xfc\xa7\x68\xa9\xaf\x5b\xa7\x5f\x3e\xb5\x06\x84\x81\x7c\xcf\x25\x1e\x25\xa8\x0b\x3d\x7f\x77\x5c\x8f\x8b\xc5\x8f\xcf\x7a\xa3\xda\x43\xf5\x24\x50\x53\xf3\x0a\x56\x5a\x2e\x72\x7b\xf8\x54\xba\x89\x12\xd8\xc8\xe7\x12\x73\x84\xa4\xa3\xe7\x12\x95\xdf\x75\x67\xb8\x91\x48\xcb\x7a\xfc\x87\x20\x81\x7f\xf1\x1f\xb0\x54\xd9\x16\x7f\x96\x96\x1f\x57\xa1\x2a\xbb\x2e\xdb\x47\x00\x00\x00\xff\xff\x38\xbc\x8b\x6d\xa6\x02\x00\x00")

func pkgAuthHtmlDefaultViewsRecoveryTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultViewsRecoveryTmpl,
		"pkg/auth/html/default/views/recovery.tmpl",
	)
}

func pkgAuthHtmlDefaultViewsRecoveryTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultViewsRecoveryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/views/recovery.tmpl", size: 678, mode: os.FileMode(438), modTime: time.Unix(1600402845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultViewsRegisterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xcf\x8a\xdb\x30\x10\xc6\xef\x79\x8a\x61\xee\x9b\xc0\x1e\xf6\x50\x6c\x97\xa5\xd7\x42\xcb\xd2\x17\x98\x58\x93\x95\x40\xd6\x18\x69\xe4\xd6\x15\x7a\xf7\xe2\x5d\xa7\x4e\x20\xa5\xa1\x3d\x9a\xf9\xf4\x7d\xbf\xf9\xe3\x52\x94\x87\xd1\x93\x32\xe0\x91\x12\x23\xec\x6b\xdd\xed\x4a\x31\x7c\x72\x81\x01\xa9\x57\x27\x01\x6b\x7d\xe1\x57\x97\x94\x63\x29\x1c\xcc\xb5\xe6\x28\x66\xc6\x5a\x77\x00\x00\x8d\x7d\x84\xde\x53\x4a\x2d\x9e\x24\x0e\x0f\x96\xc9\x70\xc4\xee\xfc\xbc\x39\xd8\xc7\xee\x5d\x69\xdc\x74\x25\x35\x6e\x72\x69\x09\xeb\x9a\x83\x71\xd3\xaa\x5a\x4a\x30\xb0\x5a\x31\x2d\x8e\x92\x14\xdf\x0b\x37\x2d\x7a\x09\x1a\xc5\x5f\x48\xde\x64\x2e\x8c\x59\x41\xe7\x91\x5b\x54\xfe\xa1\x08\x81\x06\x6e\x91\x07\x72\x1e\x61\xf4\xd4\xb3\x15\x6f\x38\xb6\xf8\x6d\x1e\x19\x66\xc9\x11\xd6\xea\xa5\xff\x9b\xd1\x25\xc0\x06\xfa\xaf\x3c\x23\xa5\xf4\x5d\xa2\x39\x33\x6d\xdf\x7f\xc0\xda\x04\x77\x90\xfd\x17\x5a\xca\xc7\xc1\xe9\xef\x9c\xa3\x06\x84\x89\x7c\xe6\x16\x3f\x49\x50\x17\x32\xdf\x9e\x45\x73\x58\x22\xfe\xba\xe6\xed\xa9\x7d\xea\x9e\x7d\x64\x32\x33\x58\x9a\x18\x28\x00\xf5\xbd\xe4\xa0\x1f\x9b\x83\x7d\x3a\xbb\x6e\x01\x04\x36\xf2\xa9\xc5\x52\xf6\x2f\x92\x95\xe3\xfe\x0b\x65\xb5\xcf\x59\xad\x44\xf7\x93\xbf\x92\xda\x5a\x11\x92\xce\x7e\x5d\xfa\x83\xe1\x5e\x22\x2d\xe7\xfc\x01\x82\x04\xbe\xe3\x90\x60\xe9\xf9\x7a\x42\x9f\xe5\xd5\x85\xdb\x4d\x53\xb7\x5b\xff\x8e\x5f\x01\x00\x00\xff\xff\x2d\xb0\x84\x0f\x57\x03\x00\x00")

func pkgAuthHtmlDefaultViewsRegisterTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultViewsRegisterTmpl,
		"pkg/auth/html/default/views/register.tmpl",
	)
}

func pkgAuthHtmlDefaultViewsRegisterTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultViewsRegisterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/views/register.tmpl", size: 855, mode: os.FileMode(438), modTime: time.Unix(1601592990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pkgAuthHtmlDefaultViewsStateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xc1\x8a\xdb\x30\x10\x86\xef\x7e\x8a\x61\xee\x9b\xc0\x1e\xf6\x50\x62\xc3\xd2\x43\x2f\x85\x2e\xa5\x2f\x30\xb6\x26\x95\xa8\xac\x31\xd2\x28\xd4\x15\x7a\xf7\xe2\xd8\x69\x12\x36\x94\xd2\x9b\x60\x66\xbe\x7f\xfe\x7f\x54\x8a\xf2\x38\x79\x52\x06\xec\x29\x31\xc2\xae\xd6\xa6\x29\xc5\xf0\xd1\x05\x06\xa4\x41\x9d\x04\xac\xf5\xf5\xfc\x28\x85\x83\xb9\xef\xe8\xc5\xcc\x58\x6b\x03\x00\x70\xb0\xcf\x30\x78\x4a\xa9\xc5\xa3\xc4\xf1\xc9\x32\x19\x8e\xd8\x95\xb2\x7b\xa3\x48\x63\xda\xad\x98\x5a\x0f\x7b\xfb\xdc\xad\x33\xc6\x9d\xee\x86\x8c\x3b\xb9\xb4\x88\x76\x87\xbd\x71\xa7\xad\x6b\x29\xc1\xc8\x6a\xc5\xb4\x38\x49\x52\x5c\x0b\x0f\x11\x83\x04\x8d\xe2\x6f\x5a\xce\x6d\x2e\x4c\x59\x41\xe7\x89\x5b\x54\xfe\xa9\x08\x81\x46\x6e\x91\x47\x72\x1e\x61\xf2\x34\xb0\x15\x6f\x38\xb6\xf8\x6d\x9e\x18\x66\xc9\x11\xb6\xea\x2d\xff\x0c\x42\x38\x91\xcf\xdc\xe2\xed\x26\xeb\xc6\xcd\x43\x49\xeb\x8c\xe1\x70\x11\xdd\x92\xbd\x40\xde\x47\x84\xfb\x5b\xd0\x7f\x58\x4c\xb9\x1f\x9d\xfe\xd9\xbc\xd7\xab\xda\x47\x09\xea\x42\xe6\xf7\xab\xaf\xcf\x45\x62\x53\xff\xcb\x7d\xae\xb3\xf6\xa5\xfb\x24\xd0\xd3\xf0\x03\x54\x0e\x7b\xfb\x72\x01\x5d\x99\x04\x36\xf2\xf1\x6c\xf4\xab\x64\xe5\xb8\xfb\x42\x59\xed\x6b\x56\x2b\xd1\xfd\xe2\x37\x52\x5b\x2b\x42\xd2\xd9\x6f\xf7\x79\x32\x3c\x48\xa4\x25\x8e\x0f\x10\x24\xf0\x3f\xdc\x1c\x16\x9b\xf7\xa1\x7c\x96\xef\x2e\x3c\xf6\x49\x5d\xb3\x7d\xe9\xdf\x01\x00\x00\xff\xff\xf8\xb4\xff\x92\x0a\x03\x00\x00")

func pkgAuthHtmlDefaultViewsStateTmplBytes() ([]byte, error) {
	return bindataRead(
		_pkgAuthHtmlDefaultViewsStateTmpl,
		"pkg/auth/html/default/views/state.tmpl",
	)
}

func pkgAuthHtmlDefaultViewsStateTmpl() (*asset, error) {
	bytes, err := pkgAuthHtmlDefaultViewsStateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pkg/auth/html/default/views/state.tmpl", size: 778, mode: os.FileMode(438), modTime: time.Unix(1601592990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"pkg/auth/html/basic/mail/activation.tmpl":   pkgAuthHtmlBasicMailActivationTmpl,
	"pkg/auth/html/basic/mail/base.tmpl":         pkgAuthHtmlBasicMailBaseTmpl,
	"pkg/auth/html/basic/mail/recovery.tmpl":     pkgAuthHtmlBasicMailRecoveryTmpl,
	"pkg/auth/html/basic/views/base.tmpl":        pkgAuthHtmlBasicViewsBaseTmpl,
	"pkg/auth/html/basic/views/login.tmpl":       pkgAuthHtmlBasicViewsLoginTmpl,
	"pkg/auth/html/basic/views/message.tmpl":     pkgAuthHtmlBasicViewsMessageTmpl,
	"pkg/auth/html/basic/views/recovery.tmpl":    pkgAuthHtmlBasicViewsRecoveryTmpl,
	"pkg/auth/html/basic/views/register.tmpl":    pkgAuthHtmlBasicViewsRegisterTmpl,
	"pkg/auth/html/basic/views/state.tmpl":       pkgAuthHtmlBasicViewsStateTmpl,
	"pkg/auth/html/default/mail/activation.tmpl": pkgAuthHtmlDefaultMailActivationTmpl,
	"pkg/auth/html/default/mail/base.tmpl":       pkgAuthHtmlDefaultMailBaseTmpl,
	"pkg/auth/html/default/mail/recovery.tmpl":   pkgAuthHtmlDefaultMailRecoveryTmpl,
	"pkg/auth/html/default/views/base.tmpl":      pkgAuthHtmlDefaultViewsBaseTmpl,
	"pkg/auth/html/default/views/login.tmpl":     pkgAuthHtmlDefaultViewsLoginTmpl,
	"pkg/auth/html/default/views/message.tmpl":   pkgAuthHtmlDefaultViewsMessageTmpl,
	"pkg/auth/html/default/views/recovery.tmpl":  pkgAuthHtmlDefaultViewsRecoveryTmpl,
	"pkg/auth/html/default/views/register.tmpl":  pkgAuthHtmlDefaultViewsRegisterTmpl,
	"pkg/auth/html/default/views/state.tmpl":     pkgAuthHtmlDefaultViewsStateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"pkg": &bintree{nil, map[string]*bintree{
		"auth": &bintree{nil, map[string]*bintree{
			"html": &bintree{nil, map[string]*bintree{
				"basic": &bintree{nil, map[string]*bintree{
					"mail": &bintree{nil, map[string]*bintree{
						"activation.tmpl": &bintree{pkgAuthHtmlBasicMailActivationTmpl, map[string]*bintree{}},
						"base.tmpl":       &bintree{pkgAuthHtmlBasicMailBaseTmpl, map[string]*bintree{}},
						"recovery.tmpl":   &bintree{pkgAuthHtmlBasicMailRecoveryTmpl, map[string]*bintree{}},
					}},
					"views": &bintree{nil, map[string]*bintree{
						"base.tmpl":     &bintree{pkgAuthHtmlBasicViewsBaseTmpl, map[string]*bintree{}},
						"login.tmpl":    &bintree{pkgAuthHtmlBasicViewsLoginTmpl, map[string]*bintree{}},
						"message.tmpl":  &bintree{pkgAuthHtmlBasicViewsMessageTmpl, map[string]*bintree{}},
						"recovery.tmpl": &bintree{pkgAuthHtmlBasicViewsRecoveryTmpl, map[string]*bintree{}},
						"register.tmpl": &bintree{pkgAuthHtmlBasicViewsRegisterTmpl, map[string]*bintree{}},
						"state.tmpl":    &bintree{pkgAuthHtmlBasicViewsStateTmpl, map[string]*bintree{}},
					}},
				}},
				"default": &bintree{nil, map[string]*bintree{
					"mail": &bintree{nil, map[string]*bintree{
						"activation.tmpl": &bintree{pkgAuthHtmlDefaultMailActivationTmpl, map[string]*bintree{}},
						"base.tmpl":       &bintree{pkgAuthHtmlDefaultMailBaseTmpl, map[string]*bintree{}},
						"recovery.tmpl":   &bintree{pkgAuthHtmlDefaultMailRecoveryTmpl, map[string]*bintree{}},
					}},
					"views": &bintree{nil, map[string]*bintree{
						"base.tmpl":     &bintree{pkgAuthHtmlDefaultViewsBaseTmpl, map[string]*bintree{}},
						"login.tmpl":    &bintree{pkgAuthHtmlDefaultViewsLoginTmpl, map[string]*bintree{}},
						"message.tmpl":  &bintree{pkgAuthHtmlDefaultViewsMessageTmpl, map[string]*bintree{}},
						"recovery.tmpl": &bintree{pkgAuthHtmlDefaultViewsRecoveryTmpl, map[string]*bintree{}},
						"register.tmpl": &bintree{pkgAuthHtmlDefaultViewsRegisterTmpl, map[string]*bintree{}},
						"state.tmpl":    &bintree{pkgAuthHtmlDefaultViewsStateTmpl, map[string]*bintree{}},
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
